diff --git a/src/game/ingame_menu.c b/src/game/ingame_menu.c
index 7ae9f1e..7504e8a 100644
--- a/src/game/ingame_menu.c
+++ b/src/game/ingame_menu.c
@@ -2,6 +2,7 @@
 
 #include "actors/common1.h"
 #include "area.h"
+#include "time_trials.h"
 #include "audio/external.h"
 #include "camera.h"
 #include "course_table.h"
@@ -2134,6 +2135,7 @@ void shade_screen(void) {
     gDPSetEnvColor(gDisplayListHead++, 0, 0, 0, 110);
     gSPDisplayList(gDisplayListHead++, dl_draw_text_bg_box);
     gSPPopMatrix(gDisplayListHead++, G_MTX_MODELVIEW);
+    gTimeTableDisplayListHead = gDisplayListHead;
 }
 
 void print_animated_red_coin(s16 x, s16 y) {
@@ -2632,6 +2634,7 @@ void render_pause_castle_main_strings(s16 x, s16 y) {
 
     void *courseName;
 
+    if (time_trials_render_time_table()) { return; }
     u8 strVal[8];
     s16 prevCourseIndex = gMenuLineNum;
 
@@ -2753,7 +2756,7 @@ s16 render_pause_screen(void) {
 #endif
                 ) {
                 render_pause_course_options(99, 93, &gMenuLineNum, 15);
-            }
+            } else time_trials_render_time_table();
 
 #if QOL_FEATURE_Z_BUTTON_EXTRA_OPTION
             if (gPlayer3Controller->buttonPressed & (A_BUTTON | START_BUTTON | Z_TRIG))
@@ -2987,7 +2990,7 @@ void render_course_complete_lvl_info_and_hud_str(void) {
         play_star_fanfare_and_flash_hud(1, 1 << (gLastCompletedStarNum - 1));
 
         if (gLastCompletedStarNum == 7) {
-            name = segmented_to_virtual(actNameTbl[COURSE_STAGES_MAX * 6 + 1]);
+            name = segmented_to_virtual(actNameTbl[COURSE_STAGES_MAX * 6]);
         } else {
             name = segmented_to_virtual(actNameTbl[COURSE_NUM_TO_INDEX(gLastCompletedCourseNum) * 6 + gLastCompletedStarNum - 1]);
         }
@@ -3227,6 +3230,7 @@ s16 render_menus_and_dialogs(void) {
     s16 index = MENU_OPT_NONE;
 
     create_dl_ortho_matrix();
+    time_trials_update(gMarioState, gMenuMode != -1);
 
     if (gMenuMode != MENU_MODE_NONE) {
         switch (gMenuMode) {
@@ -2522,6 +2524,7 @@ void render_pause_castle_main_strings(s16 x, s16 y) {
 
     void *courseName;
 
+    if (time_trials_render_time_table()) { return; }
     u8 strVal[8];
     s16 starNum = gDialogLineNum;
 
@@ -2638,7 +2641,7 @@ s16 render_pause_courses_and_castle(void) {
 /* Added support for the "Exit course at any time" cheat */
             if ((gMarioStates[0].action & ACT_FLAG_PAUSE_EXIT) || (Cheats.EnableCheats && Cheats.ExitAnywhere)) {
                 render_pause_course_options(99, 93, &gDialogLineNum, 15);
-            }
+            } else time_trials_render_time_table();
 
 #ifdef VERSION_EU
             if (gPlayer3Controller->buttonPressed & (A_BUTTON | Z_TRIG | START_BUTTON))
@@ -1668,7 +1671,7 @@ s16 render_pause_courses_and_castle(void) {
 /* Added support for the "Exit course at any time" cheat */
             if ((gMarioStates[0].action & ACT_FLAG_PAUSE_EXIT) || cheats_exit_anywhere(gMarioState)) {
                 render_pause_course_options(99, 93, &gDialogLineNum, 15);
-            }
+            } else time_trials_render_time_table();
             if (gPlayer3Controller->buttonPressed & A_BUTTON
              || gPlayer3Controller->buttonPressed & START_BUTTON)
             {
@@ -2868,7 +2871,7 @@ void render_course_complete_lvl_info_and_hud_str(void) {
         play_star_fanfare_and_flash_hud(1, 1 << (gLastCompletedStarNum - 1));
 
         if (gLastCompletedStarNum == 7) {
-            name = segmented_to_virtual(actNameTbl[COURSE_STAGES_MAX * 6 + 1]);
+            name = segmented_to_virtual(actNameTbl[COURSE_STAGES_MAX * 6]);
         } else {
             name = segmented_to_virtual(actNameTbl[(gLastCompletedCourseNum - 1) * 6 + gLastCompletedStarNum - 1]);
         }
@@ -3071,6 +3074,7 @@ s16 render_menus_and_dialogs() {
     s16 mode = 0;
 
     create_dl_ortho_matrix();
+    time_trials_update(gMarioState, gMenuMode != -1);
 
     if (gMenuMode != -1) {
         switch (gMenuMode) {
@@ -2659,7 +2661,7 @@ s16 render_pause_courses_and_castle(void) {
 #endif
                 ) {
                 render_pause_course_options(99, 93, &gDialogLineNum, 15);
-            }
+            } else time_trials_render_time_table();
 
 #if QOL_FEATURE_Z_BUTTON_EXTRA_OPTION
             if (gPlayer3Controller->buttonPressed & (A_BUTTON | Z_TRIG | START_BUTTON))
@@ -2689,6 +2691,16 @@ s16 render_pause_courses_and_castle(void) {
 				gDialogLineNum = 1;
 			}
             render_pause_castle_menu_box(20, 200);
+            if (time_trials_render_time_table()) {
+                if (gPlayer3Controller->buttonPressed & (A_BUTTON | START_BUTTON)) {
+                    level_set_transition(0, NULL);
+                    play_sound(SOUND_MENU_PAUSE_2, gGlobalSoundSource);
+                    gMenuMode = MENU_MODE_NONE;
+                    gDialogBoxState = DIALOG_STATE_OPENING;
+                    return (gPlayer3Controller->buttonPressed & A_BUTTON) ? 3 : 1;
+                }
+                break;
+            }
             render_pause_castle_main_strings(30, 180);
 			render_pause_course_options(105, 56, &gDialogLineNum, 15);
 
diff --git a/src/game/level_update.c b/src/game/level_update.c
index 72a6a60..30e61fc 100644
--- a/src/game/level_update.c
+++ b/src/game/level_update.c
@@ -1164,6 +1164,8 @@ s32 init_level(void) {
     s32 val4 = 0;
 
     set_play_mode(PLAY_MODE_NORMAL);
+    extern void time_trials_level_entry();
+    time_trials_level_entry();
 
     sDelayedWarpOp = WARP_OP_NONE;
     sTransitionTimer = 0;
@@ -1226,6 +1226,8 @@ s32 init_level(void) {
     s32 fadeFromColor = FALSE;
 
     set_play_mode(PLAY_MODE_NORMAL);
+    extern void time_trials_level_entry();
+    time_trials_level_entry();
 
 #ifdef TARGET_N3DS
     gDPSetIod(gDisplayListHead++, iodNormal);
@@ -1294,6 +1294,8 @@ s32 init_level(void) {
     s32 val4 = FALSE;
 
     set_play_mode(PLAY_MODE_NORMAL);
+    extern void time_trials_level_entry();
+    time_trials_level_entry();
 
 #ifdef TARGET_N3DS
     gDPSetIod(gDisplayListHead++, iodNormal);
diff --git a/src/game/time_trials.c b/src/game/time_trials.c
new file mode 100644
index 0000000..38ec9c9
--- /dev/null
+++ b/src/game/time_trials.c
@@ -0,0 +1,1380 @@
+#include "time_trials.h"
+#include "sm64.h"
+#include "game_init.h"
+#include "sound_init.h"
+#include "geo_commands.h"
+#include "gfx_dimensions.h"
+#include "ingame_menu.h"
+#include "level_update.h"
+#include "object_list_processor.h"
+#include "save_file.h"
+#include "behavior_data.h"
+#include "pc/configfile.h"
+#include "pc/fs/fs.h"
+#include "engine/math_util.h"
+#include "audio/external.h"
+#include "model_ids.h"
+#include <stdio.h>
+#define COURSE_IS_BOWSER_COURSE(cmd) (cmd >= COURSE_BITDW && cmd <= COURSE_BITS)
+
+// Games
+#if defined(SUPER_MARIO_74_AND_EXTREME_EDITION) // SM74
+#define TIME_TRIALS_DIRECTORY (gCurrAreaIndex == 1 ? "time_trials_sm74" : "time_trials_sm74ee")
+#define COURSE_NAME_TABLE (gCurrAreaIndex == 1 ? seg2_course_name_table : seg2_course_name_table_EE)
+#define HAS_BOWSER_FIGHTS 1
+#define IS_SM64 0
+static const u8 AVAILABLE_STARS_PER_COURSE_74_EE[2][COURSE_COUNT] = { {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_JRB]   = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1111111,
+    [COURSE_SSL]   = 0b1111111,
+    [COURSE_DDD]   = 0b1111111,
+    [COURSE_SL]    = 0b1111111,
+    [COURSE_WDW]   = 0b1111111,
+    [COURSE_TTM]   = 0b1111111,
+    [COURSE_THI]   = 0b1111111,
+    [COURSE_TTC]   = 0b1111111,
+    [COURSE_RR]    = 0b1111111,
+    [COURSE_BITDW] = 0b0001111,
+    [COURSE_BITFS] = 0b0011111,
+    [COURSE_BITS]  = 0b0111111,
+    [COURSE_TOTWC] = 0b0000111,
+    [COURSE_COTMC] = 0b0011111,
+    [COURSE_VCUTM] = 0b0111111,
+    [COURSE_PSS]   = 0b0001111,
+    [COURSE_WMOTR] = 0b0111111,
+    [COURSE_SA]    = 0b0000101,
+}, {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_JRB]   = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1111111,
+    [COURSE_SSL]   = 0b1111111,
+    [COURSE_DDD]   = 0b1111111,
+    [COURSE_SL]    = 0b1111111,
+    [COURSE_WDW]   = 0b1111111,
+    [COURSE_TTM]   = 0b1111111,
+    [COURSE_THI]   = 0b1111111,
+    [COURSE_TTC]   = 0b1111111,
+    [COURSE_RR]    = 0b1111111,
+    [COURSE_BITDW] = 0b0001111,
+    [COURSE_BITFS] = 0b0011111,
+    [COURSE_BITS]  = 0b0111111,
+    [COURSE_TOTWC] = 0b0000111,
+    [COURSE_COTMC] = 0b0111111,
+    [COURSE_VCUTM] = 0b0111111,
+    [COURSE_PSS]   = 0b0001111,
+    [COURSE_WMOTR] = 0b0111111,
+    [COURSE_SA]    = 0b1111111,
+} };
+#define AVAILABLE_STARS_PER_COURSE AVAILABLE_STARS_PER_COURSE_74_EE[gCurrAreaIndex - 1]
+static const s32 AVAILABLE_COURSES[] = {
+    COURSE_BOB,
+    COURSE_WF,
+    COURSE_JRB,
+    COURSE_CCM,
+    COURSE_BBH,
+    COURSE_HMC,
+    COURSE_LLL,
+    COURSE_SSL,
+    COURSE_DDD,
+    COURSE_SL,
+    COURSE_WDW,
+    COURSE_TTM,
+    COURSE_THI,
+    COURSE_TTC,
+    COURSE_RR,
+    COURSE_BITDW,
+    COURSE_BITFS,
+    COURSE_BITS,
+    COURSE_TOTWC,
+    COURSE_COTMC,
+    COURSE_VCUTM,
+    COURSE_PSS,
+    COURSE_WMOTR,
+    COURSE_SA,
+};
+static const s32 NUM_AVAILABLE_COURSES = sizeof(AVAILABLE_COURSES) / sizeof(AVAILABLE_COURSES[0]);
+#elif defined(SUPER_MARIO_STAR_ROAD) // Star Road
+#define TIME_TRIALS_DIRECTORY "time_trials_smsr"
+#define COURSE_NAME_TABLE seg2_course_name_table
+#define HAS_BOWSER_FIGHTS 1
+#define IS_SM64 0
+static const u8 AVAILABLE_STARS_PER_COURSE[COURSE_COUNT] = {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_JRB]   = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1111111,
+    [COURSE_SSL]   = 0b1111111,
+    [COURSE_DDD]   = 0b1111111,
+    [COURSE_SL]    = 0b1111111,
+    [COURSE_WDW]   = 0b1111111,
+    [COURSE_TTM]   = 0b1111111,
+    [COURSE_THI]   = 0b1111111,
+    [COURSE_TTC]   = 0b1111111,
+    [COURSE_RR]    = 0b1111111,
+    [COURSE_BITDW] = 0b0001001,
+    [COURSE_BITFS] = 0b0010001,
+    [COURSE_BITS]  = 0b0100001,
+    [COURSE_TOTWC] = 0b0100001,
+    [COURSE_COTMC] = 0b0010001,
+    [COURSE_VCUTM] = 0b0100001,
+    [COURSE_PSS]   = 0b0100011,
+    [COURSE_WMOTR] = 0b0100001,
+    [COURSE_SA]    = 0b0100011,
+};
+static const s32 AVAILABLE_COURSES[] = {
+    COURSE_BOB,
+    COURSE_WF,
+    COURSE_JRB,
+    COURSE_CCM,
+    COURSE_BBH,
+    COURSE_HMC,
+    COURSE_LLL,
+    COURSE_SSL,
+    COURSE_DDD,
+    COURSE_SL,
+    COURSE_WDW,
+    COURSE_TTM,
+    COURSE_THI,
+    COURSE_TTC,
+    COURSE_RR,
+    COURSE_BITDW,
+    COURSE_BITFS,
+    COURSE_BITS,
+    COURSE_TOTWC,
+    COURSE_COTMC,
+    COURSE_VCUTM,
+    COURSE_PSS,
+    COURSE_WMOTR,
+    COURSE_SA,
+};
+static const s32 NUM_AVAILABLE_COURSES = sizeof(AVAILABLE_COURSES) / sizeof(AVAILABLE_COURSES[0]);
+#elif defined(SUPER_MARIO_64_THE_GREEN_STARS) // Green Stars
+#define TIME_TRIALS_DIRECTORY "time_trials_smgs"
+#define COURSE_NAME_TABLE seg2_course_name_table
+#define HAS_BOWSER_FIGHTS 1
+#define IS_SM64 0
+static const u8 AVAILABLE_STARS_PER_COURSE[COURSE_COUNT] = {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_JRB]   = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1111111,
+    [COURSE_SSL]   = 0b1111111,
+    [COURSE_DDD]   = 0b1111111,
+    [COURSE_SL]    = 0b1111111,
+    [COURSE_WDW]   = 0b1111111,
+    [COURSE_TTM]   = 0b1111111,
+    [COURSE_THI]   = 0b1111111,
+    [COURSE_TTC]   = 0b1111111,
+    [COURSE_RR]    = 0b1111111,
+    [COURSE_BITDW] = 0b0000111,
+    [COURSE_BITFS] = 0b0001111,
+    [COURSE_BITS]  = 0b0001111,
+    [COURSE_TOTWC] = 0b0000011,
+    [COURSE_COTMC] = 0b0000111,
+    [COURSE_PSS]   = 0b0001111,
+    [COURSE_SA]    = 0b0000011,
+};
+static const s32 AVAILABLE_COURSES[] = {
+    COURSE_BOB,
+    COURSE_WF,
+    COURSE_JRB,
+    COURSE_CCM,
+    COURSE_BBH,
+    COURSE_HMC,
+    COURSE_LLL,
+    COURSE_SSL,
+    COURSE_DDD,
+    COURSE_SL,
+    COURSE_WDW,
+    COURSE_TTM,
+    COURSE_THI,
+    COURSE_TTC,
+    COURSE_RR,
+    COURSE_BITDW,
+    COURSE_BITFS,
+    COURSE_BITS,
+    COURSE_TOTWC,
+    COURSE_COTMC,
+    COURSE_PSS,
+    COURSE_SA,
+};
+static const s32 NUM_AVAILABLE_COURSES = sizeof(AVAILABLE_COURSES) / sizeof(AVAILABLE_COURSES[0]);
+#elif defined(MODEL_MARIO_SUB) // Moonshine
+#define TIME_TRIALS_DIRECTORY "time_trials_smms"
+#define COURSE_NAME_TABLE seg2_course_name_table
+#define HAS_BOWSER_FIGHTS 0
+#define IS_SM64 0
+static const u8 AVAILABLE_STARS_PER_COURSE[COURSE_COUNT] = {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1000011,
+    [COURSE_WDW]   = 0b1001111,
+    [COURSE_BITFS] = 0b0000011,
+    [COURSE_BITS]  = 0b0000011,
+    [COURSE_PSS]   = 0b0000011,
+};
+static const s32 AVAILABLE_COURSES[] = {
+    COURSE_BOB,
+    COURSE_WF,
+    COURSE_CCM,
+    COURSE_BBH,
+    COURSE_HMC,
+    COURSE_LLL,
+    COURSE_WDW,
+    COURSE_BITFS,
+    COURSE_BITS,
+    COURSE_PSS,
+};
+static const s32 NUM_AVAILABLE_COURSES = sizeof(AVAILABLE_COURSES) / sizeof(AVAILABLE_COURSES[0]);
+#else // SM64
+#define TIME_TRIALS_DIRECTORY "time_trials_sm64"
+#define COURSE_NAME_TABLE seg2_course_name_table
+#define HAS_BOWSER_FIGHTS 1
+#define IS_SM64 1
+static const u8 AVAILABLE_STARS_PER_COURSE[COURSE_COUNT] = {
+    [COURSE_BOB]   = 0b1111111,
+    [COURSE_WF]    = 0b1111111,
+    [COURSE_JRB]   = 0b1111111,
+    [COURSE_CCM]   = 0b1111111,
+    [COURSE_BBH]   = 0b1111111,
+    [COURSE_HMC]   = 0b1111111,
+    [COURSE_LLL]   = 0b1111111,
+    [COURSE_SSL]   = 0b1111111,
+    [COURSE_DDD]   = 0b1111111,
+    [COURSE_SL]    = 0b1111111,
+    [COURSE_WDW]   = 0b1111111,
+    [COURSE_TTM]   = 0b1111111,
+    [COURSE_THI]   = 0b1111111,
+    [COURSE_TTC]   = 0b1111111,
+    [COURSE_RR]    = 0b1111111,
+    [COURSE_BITDW] = 0b0000001,
+    [COURSE_BITFS] = 0b0000001,
+    [COURSE_BITS]  = 0b0000001,
+    [COURSE_TOTWC] = 0b0000001,
+    [COURSE_COTMC] = 0b0000001,
+    [COURSE_VCUTM] = 0b0000001,
+    [COURSE_PSS]   = 0b0000011,
+    [COURSE_WMOTR] = 0b0000001,
+    [COURSE_SA]    = 0b0000001,
+};
+static const s32 AVAILABLE_COURSES[] = {
+    COURSE_BOB,
+    COURSE_WF,
+    COURSE_JRB,
+    COURSE_CCM,
+    COURSE_BBH,
+    COURSE_HMC,
+    COURSE_LLL,
+    COURSE_SSL,
+    COURSE_DDD,
+    COURSE_SL,
+    COURSE_WDW,
+    COURSE_TTM,
+    COURSE_THI,
+    COURSE_TTC,
+    COURSE_RR,
+    COURSE_BITDW,
+    COURSE_BITFS,
+    COURSE_BITS,
+    COURSE_TOTWC,
+    COURSE_COTMC,
+    COURSE_VCUTM,
+    COURSE_PSS,
+    COURSE_WMOTR,
+    COURSE_SA,
+};
+static const s32 NUM_AVAILABLE_COURSES = sizeof(AVAILABLE_COURSES) / sizeof(AVAILABLE_COURSES[0]);
+#endif
+
+// Versions
+#if defined(MODEL_MILK_BOTTLE) // Render96
+#define _DmaTable   MarioAnimDmaRelatedThing
+#define _dmaTable   animDmaTable
+#define _currAddr   currentAnimAddr
+#define _animList   animation
+#define _animInfo   curAnim
+#define _loopEnd    unk08
+#define _gTextAlpha gDialogTextAlpha
+extern u8 **seg2_course_name_table;
+#elif defined(MARIO_SPECIAL_CAPS) // ex-alo
+#define _DmaTable   DmaTable
+#define _dmaTable   dmaTable
+#define _currAddr   currentAddr
+#define _animList   animList
+#define _animInfo   animInfo
+#define _loopEnd    loopEnd
+#if defined(SUPER_MARIO_74_AND_EXTREME_EDITION)
+#define _gTextAlpha gDialogTextAlpha
+#else
+#define _gTextAlpha gMenuTextAlpha
+#endif
+#else // ex-nightly
+#define _DmaTable   MarioAnimDmaRelatedThing
+#define _dmaTable   animDmaTable
+#define _currAddr   currentAnimAddr
+#define _animList   animation
+#define _animInfo   unk38
+#define _loopEnd    unk08
+#define _gTextAlpha gDialogTextAlpha
+#endif
+
+// OMM
+#if defined(OMM_STARS_NON_STOP)
+#define TIME_TRIALS_FILENAME_EXT ".omm.ttg"
+#undef USE_SYSTEM_MALLOC
+#else
+#define TIME_TRIALS_FILENAME_EXT ".ttg"
+#define OMM_STARS_NON_STOP 0
+#define OMM_ALL_STARS 0
+#endif
+
+// Constants
+#define TIME_TRIALS_MAX_ALLOWED_TIME ((10 * 60 * 30) - 1) // 9'59"99
+#define TIME_TRIALS_UNDEFINED_TIME -1
+#define TIME_TRIALS_100_COINS_STAR_NUM 7
+#define TIME_TRIALS_BOWSER_KEY_STAR_NUM 7
+#define TIME_TRIALS_NUM_SAVE_FILES NUM_SAVE_FILES
+#define TIME_TRIALS_NUM_COURSES (COURSE_MAX - COURSE_MIN)
+#define TIME_TRIALS_NUM_STARS_PER_COURSE 7
+#define TIME_TRIALS_NUM_TIMES_PER_COURSE (TIME_TRIALS_NUM_STARS_PER_COURSE + 1) // All-stars
+
+// Checks
+#define GET_FI(fileNum)   s32 fi = (fileNum) - 1;
+#define GET_CI(courseNum) s32 ci = (courseNum) - COURSE_MIN;
+#define GET_SI(starNum)   s32 si = (starNum) - 1;
+#define CHECK_FI(x) if (fi < 0 || fi >= TIME_TRIALS_NUM_SAVE_FILES) { return x; }
+#define CHECK_CI(x) if (ci < 0 || ci >= TIME_TRIALS_NUM_COURSES) { return x; }
+#define CHECK_SI(x) if (si < 0 || si >= TIME_TRIALS_NUM_TIMES_PER_COURSE) { return x; }
+
+static bool sTimeTrialsEnabled = true;
+bool time_trials_enabled() {
+    return sTimeTrialsEnabled;
+}
+
+//
+// Ghost behaviors
+//
+
+static const BehaviorScript bhvTimeTrialsGhost0[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost1[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost2[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost3[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost4[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost5[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost6[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhost7[] = { 0x08000000, 0x09000000 };
+static const BehaviorScript *bhvTimeTrialsGhost[] = {
+    bhvTimeTrialsGhost0,
+    bhvTimeTrialsGhost1,
+    bhvTimeTrialsGhost2,
+    bhvTimeTrialsGhost3,
+    bhvTimeTrialsGhost4,
+    bhvTimeTrialsGhost5,
+    bhvTimeTrialsGhost6,
+    bhvTimeTrialsGhost7,
+};
+
+static const BehaviorScript bhvTimeTrialsGhostNumber0[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber1[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber2[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber3[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber4[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber5[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber6[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript bhvTimeTrialsGhostNumber7[] = { 0x21000000, 0x08000000, 0x09000000 };
+static const BehaviorScript *bhvTimeTrialsGhostNumber[] = {
+    bhvTimeTrialsGhostNumber0,
+    bhvTimeTrialsGhostNumber1,
+    bhvTimeTrialsGhostNumber2,
+    bhvTimeTrialsGhostNumber3,
+    bhvTimeTrialsGhostNumber4,
+    bhvTimeTrialsGhostNumber5,
+    bhvTimeTrialsGhostNumber6,
+    bhvTimeTrialsGhostNumber7,
+};
+
+//
+// Ghost models
+//
+
+#include "time_trials_ghost_geo.inl"
+
+enum {
+    GHOST_MARIO_DEFAULT,   // Blue
+    GHOST_MARIO_RED_COINS, // Red
+    GHOST_MARIO_PSS_2,     // Green
+    GHOST_MARIO_100_COINS, // Yellow
+    GHOST_MARIO_ALL_STARS, // Pink
+};
+
+static struct GraphNode *time_trials_get_ghost_mario_graph_node(s32 type) {
+    static struct { const GeoLayout *geo; struct GraphNode *node; } sGhostMarios[] = {
+        [GHOST_MARIO_DEFAULT]   = { ghost_mario_blue_geo,  NULL },
+        [GHOST_MARIO_RED_COINS] = { ghost_mario_red_geo,   NULL },
+        [GHOST_MARIO_PSS_2]     = { ghost_mario_green_geo, NULL },
+        [GHOST_MARIO_100_COINS] = { ghost_mario_gold_geo,  NULL },
+        [GHOST_MARIO_ALL_STARS] = { ghost_mario_pink_geo,  NULL },
+    };
+    if (!sGhostMarios[type].node) {
+#if defined(USE_SYSTEM_MALLOC) // this is garbage
+        struct AllocOnlyPool {
+            void *lastBlock;
+            u32 lastBlockSize;
+            u32 lastBlockNextPos;
+        };
+        struct AllocOnlyPool *pool = (struct AllocOnlyPool *) main_pool_alloc(sizeof(struct AllocOnlyPool), NULL);
+        pool->lastBlock = NULL;
+        pool->lastBlockSize = 0;
+        pool->lastBlockNextPos = 0;
+#else
+        struct AllocOnlyPool *pool = calloc(1, 0x100000);
+        pool->totalSpace = 0x100000 - sizeof(struct AllocOnlyPool);
+        pool->usedSpace = 0;
+        pool->startPtr = ((u8 *) pool) + sizeof(struct AllocOnlyPool);
+        pool->freePtr = ((u8 *) pool) + sizeof(struct AllocOnlyPool);
+#endif
+        sGhostMarios[type].node = process_geo_layout((void *) pool, (void *) sGhostMarios[type].geo);
+    }
+    return sGhostMarios[type].node;
+}
+
+//
+// Files
+//
+
+static const char *__time_trials_get_dirname() {
+    static char dirname[256];
+    snprintf(dirname, 256, "%s/%s", sys_user_path(), TIME_TRIALS_DIRECTORY);
+    return dirname;
+}
+
+static const char *__time_trials_get_filename(s32 fi, s32 ci, s32 si) {
+    static char filename[256];
+    const char *dirname = __time_trials_get_dirname();
+    snprintf(filename, 256, "%s/%d.%02d.%d" TIME_TRIALS_FILENAME_EXT, dirname, fi, ci, si);
+    return filename;
+}
+
+//
+// Ghost Frame data
+//
+
+typedef struct {
+    s16 posX, posY, posZ;
+    s8 pitch, yaw, roll;
+    u8 scaleX, scaleY, scaleZ;
+    u8 animIndex, animFrame;
+    u8 levelNum, areaIndex;
+} TTGF;
+typedef TTGF TTGD[TIME_TRIALS_MAX_ALLOWED_TIME + 1];
+typedef TTGF *TTGP;
+#define time_trials_is_end_frame(p, f) (p[f].levelNum == 0)
+
+//
+// Data
+//
+
+enum { TT_TIMER_DISABLED, TT_TIMER_RUNNING, TT_TIMER_STOPPED };
+static s32  sTimeTrialsState = TT_TIMER_DISABLED;
+static s32  sTimeTrialsTimer = 0;
+static bool sTimeTrialsHiScore = false;
+static TTGD sTimeTrialsGhostDataR[TIME_TRIALS_NUM_TIMES_PER_COURSE];
+static TTGD sTimeTrialsGhostDataW;
+
+//
+// Read
+//
+
+static s32 __time_trials_read(s32 fi, s32 ci, s32 si, TTGP ghostData) {
+    if (ghostData) {
+        memset(ghostData, 0, sizeof(TTGD));
+    }
+    const char *filename = __time_trials_get_filename(fi, ci, si);
+    FILE *f = fopen(filename, "rb");
+    if (f) {
+        s32 t = 0; fread(&t, sizeof(s32), 1, f);
+        if (t && ghostData) {
+            fread(ghostData, sizeof(TTGF), t, f);
+        }
+        fclose(f);
+        return t;
+    }
+    return 0;
+}
+
+#if defined(SUPER_MARIO_74_AND_EXTREME_EDITION)
+static s32 *__time_trials_time(s32 fi, s32 ci, s32 si) {
+    static s32 sTimeTrialsTimes[2][TIME_TRIALS_NUM_SAVE_FILES][TIME_TRIALS_NUM_COURSES][TIME_TRIALS_NUM_TIMES_PER_COURSE];
+    static bool inited = 0;
+    if (!inited) {
+        s32 currAreaIndex = gCurrAreaIndex;
+        for (gCurrAreaIndex = 1; gCurrAreaIndex <= 2; ++gCurrAreaIndex)
+        for (s32 i = 0; i != TIME_TRIALS_NUM_SAVE_FILES; ++i)
+        for (s32 j = 0; j != TIME_TRIALS_NUM_COURSES; ++j)
+        for (s32 k = 0; k != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++k) {
+            s32 t = __time_trials_read(i, j, k, NULL);
+            if (t <= 0 || t > TIME_TRIALS_MAX_ALLOWED_TIME) {
+                t = TIME_TRIALS_UNDEFINED_TIME;
+            }
+            sTimeTrialsTimes[gCurrAreaIndex - 1][i][j][k] = t;
+        }
+        inited = true;
+        gCurrAreaIndex = currAreaIndex;
+    }
+    return &sTimeTrialsTimes[gCurrAreaIndex - 1][fi][ci][si];
+}
+#else
+static s32 *__time_trials_time(s32 fi, s32 ci, s32 si) {
+    static s32 sTimeTrialsTimes[TIME_TRIALS_NUM_SAVE_FILES][TIME_TRIALS_NUM_COURSES][TIME_TRIALS_NUM_TIMES_PER_COURSE];
+    static bool inited = 0;
+    if (!inited) {
+        for (s32 i = 0; i != TIME_TRIALS_NUM_SAVE_FILES; ++i)
+        for (s32 j = 0; j != TIME_TRIALS_NUM_COURSES; ++j)
+        for (s32 k = 0; k != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++k) {
+            s32 t = __time_trials_read(i, j, k, NULL);
+            if (t <= 0 || t > TIME_TRIALS_MAX_ALLOWED_TIME) {
+                t = TIME_TRIALS_UNDEFINED_TIME;
+            }
+            sTimeTrialsTimes[i][j][k] = t;
+        }
+        inited = true;
+    }
+    return &sTimeTrialsTimes[fi][ci][si];
+}
+#endif
+
+//
+// Write
+//
+
+static void __time_trials_write(s32 fi, s32 ci, s32 si) {
+    if (sTimeTrialsTimer > 0 && sTimeTrialsTimer < TIME_TRIALS_MAX_ALLOWED_TIME) {
+        fs_sys_mkdir(__time_trials_get_dirname());
+        const char *filename = __time_trials_get_filename(fi, ci, si);
+        FILE *f = fopen(filename, "wb");
+        if (f) {
+            fwrite(&sTimeTrialsTimer, sizeof(s32), 1, f);
+            fwrite(sTimeTrialsGhostDataW, sizeof(TTGF), sTimeTrialsTimer, f);
+            fclose(f);
+        }
+    }
+    *__time_trials_time(fi, ci, si) = sTimeTrialsTimer;
+}
+
+//
+// Get
+//
+
+static s32 time_trials_get_time(s32 fileNum, s32 courseNum, s32 starNum) {
+    GET_FI(fileNum);
+    GET_CI(courseNum);
+    GET_SI(starNum);
+    CHECK_FI(TIME_TRIALS_UNDEFINED_TIME);
+    CHECK_CI(TIME_TRIALS_UNDEFINED_TIME);
+    CHECK_SI(TIME_TRIALS_UNDEFINED_TIME);
+    return *__time_trials_time(fi, ci, si);
+}
+
+static s32 time_trials_get_course_time(s32 fileNum, s32 courseNum) {
+    GET_FI(fileNum);
+    GET_CI(courseNum);
+    CHECK_FI(TIME_TRIALS_UNDEFINED_TIME);
+    CHECK_CI(TIME_TRIALS_UNDEFINED_TIME);
+    s32 courseTime = 0;
+    u8 availableStars = AVAILABLE_STARS_PER_COURSE[courseNum];
+    for (s32 si = 0; si != TIME_TRIALS_NUM_STARS_PER_COURSE; ++si) {
+        if ((availableStars >> si) & 1) {
+            s32 t = *__time_trials_time(fi, ci, si);
+            if (t == TIME_TRIALS_UNDEFINED_TIME) {
+                return TIME_TRIALS_UNDEFINED_TIME;
+            }
+            courseTime += t;
+        }
+    }
+    return courseTime;
+}
+
+static s32 time_trials_get_total_time(s32 fileNum) {
+    GET_FI(fileNum);
+    CHECK_FI(TIME_TRIALS_UNDEFINED_TIME);
+    s32 totalTime = 0;
+    for (s32 i = 0; i != NUM_AVAILABLE_COURSES; ++i) {
+        s32 courseTime = time_trials_get_course_time(fileNum, AVAILABLE_COURSES[i]);
+        if (courseTime == TIME_TRIALS_UNDEFINED_TIME) {
+            return TIME_TRIALS_UNDEFINED_TIME;
+        }
+        totalTime += courseTime;
+    }
+    return totalTime;
+}
+
+//
+// Ghost
+//
+
+typedef struct {
+    struct Animation _animList;
+    u8 animationData[0x40000];
+    s32 type;
+    s32 prevValidAnimIndex;
+} TTGA;
+static TTGA sTimeTrialsGhostAnimData[TIME_TRIALS_NUM_TIMES_PER_COURSE];
+
+static s32 time_trials_ghost_retrieve_current_animation_index(struct MarioState *m) {
+    struct _DmaTable *_dmaTable = m->_animList->_dmaTable;
+    void *a = m->_animList->_currAddr;
+    for (s32 i = 0; i != (s32) _dmaTable->count; ++i) {
+        void *b = _dmaTable->srcAddr + _dmaTable->anim[i].offset;
+        if (a == b) {
+            return i;
+        }
+    }
+    return 0;
+}
+
+static s32 time_trials_ghost_load_animation(TTGA *animData, struct MarioState *m, s32 animIndex) {
+    struct _DmaTable *_dmaTable = m->_animList->_dmaTable;
+    if (animIndex >= (s32) _dmaTable->count) {
+        return 0;
+    }
+
+    // Raw data
+    u8 *addr = _dmaTable->srcAddr + _dmaTable->anim[animIndex].offset;
+    u32 size = _dmaTable->anim[animIndex].size;        
+    memcpy(animData->animationData, addr, size);
+
+    // Seek index and values pointers
+    struct Animation *a = (struct Animation *) animData->animationData;
+    const u16 *indexStart = (const u16 *) ((uintptr_t) (animData->animationData) + (uintptr_t) (a->index));
+    const s16 *valueStart = (const s16 *) ((uintptr_t) (animData->animationData) + (uintptr_t) (a->values));
+
+    // Fill ghost _animList data
+    memcpy(&animData->_animList, animData->animationData, sizeof(struct Animation));
+    animData->_animList.index = indexStart;
+    animData->_animList.values = valueStart;
+    return TRUE;
+}
+
+static void time_trials_ghost_update_animation(TTGA *animData, struct Object *obj, struct MarioState *m, s32 animIndex, s32 animFrame) {
+    if (!obj->header.gfx._animInfo.curAnim) {
+        animData->prevValidAnimIndex = -1;
+    }
+
+    // Load & set _animList
+    if (animIndex != animData->prevValidAnimIndex && time_trials_ghost_load_animation(animData, m, animIndex)) {
+        obj->header.gfx._animInfo.curAnim = &animData->_animList;
+        obj->header.gfx._animInfo.animAccel = 0;
+        obj->header.gfx._animInfo.animYTrans = m->unkB0;
+        animData->prevValidAnimIndex = animIndex;
+    }
+
+    // Set frame
+    if (obj->header.gfx._animInfo.curAnim) {
+        obj->header.gfx._animInfo.animFrame = MIN(animFrame, obj->header.gfx._animInfo.curAnim->_loopEnd - 1);
+    }
+}
+
+static struct Object *time_trials_ghost_get_object(const BehaviorScript *behavior) {
+    struct Object *head = (struct Object *) &gObjectLists[OBJ_LIST_DEFAULT];
+    struct Object *next = (struct Object *) head->header.next;
+    while (next != head) {
+        if (next->behavior == behavior && next->activeFlags) {
+            return next;
+        }
+        next = (struct Object *) next->header.next;
+    }
+    return NULL;
+}
+
+static void time_trials_ghost_load(s32 fileNum, s32 courseNum, s32 starNum, s32 type) {
+    GET_FI(fileNum);
+    GET_CI(courseNum);
+    GET_SI(starNum);
+    CHECK_FI();
+    CHECK_CI();
+    CHECK_SI();
+    if (__time_trials_read(fi, ci, si, sTimeTrialsGhostDataR[si])) {
+        memset(&sTimeTrialsGhostAnimData[si], 0, sizeof(sTimeTrialsGhostAnimData[si]));
+        sTimeTrialsGhostAnimData[si].type = type;
+        sTimeTrialsGhostAnimData[si].prevValidAnimIndex = -1;
+    }
+}
+
+static void time_trials_ghost_update(struct MarioState *m, s32 starNum, s32 frame) {
+    GET_SI(starNum);
+    CHECK_SI();
+    TTGP ghostData = sTimeTrialsGhostDataR[si];
+    TTGA *animData = &sTimeTrialsGhostAnimData[si];
+    const BehaviorScript *ghostBhv = bhvTimeTrialsGhost[si];
+    const BehaviorScript *numberBhv = bhvTimeTrialsGhostNumber[si];
+    struct Object *ghost = time_trials_ghost_get_object(ghostBhv);
+    struct Object *number = time_trials_ghost_get_object(numberBhv);
+
+    // If timer reached its max or frame data is ended, unload the ghost
+    if (frame >= TIME_TRIALS_MAX_ALLOWED_TIME || time_trials_is_end_frame(ghostData, frame)) {
+        if (ghost) obj_mark_for_deletion(ghost);
+        if (number) obj_mark_for_deletion(number);
+        return;
+    }
+
+    // Spawn ghost if not loaded
+    if (!ghost) {
+        ghost = spawn_object(m->marioObj, 0, ghostBhv);
+        number = spawn_object(m->marioObj, MODEL_NUMBER, numberBhv);
+    }
+
+    // Hide ghost if disabled, on first frame or its level or area differs from Mario
+    if (frame == 0 || ghostData[frame].levelNum != (u8) gCurrLevelNum || ghostData[frame].areaIndex != (u8) gCurrAreaIndex) {
+        ghost->header.gfx.node.flags |= GRAPH_RENDER_INVISIBLE;
+        number->header.gfx.node.flags |= GRAPH_RENDER_INVISIBLE;
+        return;
+    }
+
+    // Update ghost
+    ghost->hitboxRadius           = 0;
+    ghost->hitboxHeight           = 0;
+    ghost->oOpacity               = 0xA0;
+    ghost->oIntangibleTimer       = -1;
+    ghost->oPosX                  = (f32) ghostData[frame].posX;
+    ghost->oPosY                  = (f32) ghostData[frame].posY;
+    ghost->oPosZ                  = (f32) ghostData[frame].posZ;
+    ghost->oFaceAnglePitch        = (s16) ghostData[frame].pitch  * 0x100;
+    ghost->oFaceAngleYaw          = (s16) ghostData[frame].yaw    * 0x100;
+    ghost->oFaceAngleRoll         = (s16) ghostData[frame].roll   * 0x100;
+    ghost->oMoveAnglePitch        = (s16) ghostData[frame].pitch  * 0x100;
+    ghost->oMoveAngleYaw          = (s16) ghostData[frame].yaw    * 0x100;
+    ghost->oMoveAngleRoll         = (s16) ghostData[frame].roll   * 0x100;
+    ghost->header.gfx.pos[0]      = (f32) ghostData[frame].posX;
+    ghost->header.gfx.pos[1]      = (f32) ghostData[frame].posY;
+    ghost->header.gfx.pos[2]      = (f32) ghostData[frame].posZ;
+    ghost->header.gfx.angle[0]    = (s16) ghostData[frame].pitch  * 0x100;
+    ghost->header.gfx.angle[1]    = (s16) ghostData[frame].yaw    * 0x100;
+    ghost->header.gfx.angle[2]    = (s16) ghostData[frame].roll   * 0x100;
+    ghost->header.gfx.scale[0]    = (f32) ghostData[frame].scaleX / 100.f;
+    ghost->header.gfx.scale[1]    = (f32) ghostData[frame].scaleY / 100.f;
+    ghost->header.gfx.scale[2]    = (f32) ghostData[frame].scaleZ / 100.f;
+    ghost->header.gfx.node.flags &= ~GRAPH_RENDER_INVISIBLE;
+    ghost->header.gfx.sharedChild = time_trials_get_ghost_mario_graph_node(animData->type);
+    time_trials_ghost_update_animation(animData, ghost, m, (u16) ghostData[frame].animIndex, (u16) ghostData[frame].animFrame);
+
+    // Update number
+    number->hitboxRadius           = 0;
+    number->hitboxHeight           = 0;
+    number->oIntangibleTimer       = -1;
+    number->oAnimState             = starNum;
+    number->oPosX                  = (f32) ghostData[frame].posX;
+    number->oPosY                  = (f32) ghostData[frame].posY + 200;
+    number->oPosZ                  = (f32) ghostData[frame].posZ;
+    number->oFaceAnglePitch        = 0;
+    number->oFaceAngleYaw          = 0;
+    number->oFaceAngleRoll         = 0;
+    number->oMoveAnglePitch        = 0;
+    number->oMoveAngleYaw          = 0;
+    number->oMoveAngleRoll         = 0;
+    number->header.gfx.pos[0]      = (f32) ghostData[frame].posX;
+    number->header.gfx.pos[1]      = (f32) ghostData[frame].posY + 200;
+    number->header.gfx.pos[2]      = (f32) ghostData[frame].posZ;
+    number->header.gfx.angle[0]    = 0;
+    number->header.gfx.angle[1]    = 0;
+    number->header.gfx.angle[2]    = 0;
+    number->header.gfx.scale[0]    = 0.8f;
+    number->header.gfx.scale[1]    = 0.8f;
+    number->header.gfx.scale[2]    = 0.8f;
+
+    // Hide number for 100 coins star ghost, Bowser key ghost or All-stars ghost
+    if ((starNum == TIME_TRIALS_100_COINS_STAR_NUM && COURSE_IS_MAIN_COURSE(gCurrCourseNum)) ||
+        (starNum == TIME_TRIALS_BOWSER_KEY_STAR_NUM && COURSE_IS_BOWSER_COURSE(gCurrCourseNum)) ||
+        (starNum == TIME_TRIALS_NUM_TIMES_PER_COURSE)) {
+        number->header.gfx.node.flags |= GRAPH_RENDER_INVISIBLE;
+    } else {
+        number->header.gfx.node.flags &= ~GRAPH_RENDER_INVISIBLE;
+    }
+}
+
+static void time_trials_ghost_record(struct MarioState *m, s32 frame) {
+    if (frame >= 0 && frame < TIME_TRIALS_MAX_ALLOWED_TIME) {
+        if (m->marioObj && m->marioObj->header.gfx._animInfo.curAnim) {
+            sTimeTrialsGhostDataW[frame].posX      = (s16) m->marioObj->header.gfx.pos[0];
+            sTimeTrialsGhostDataW[frame].posY      = (s16) m->marioObj->header.gfx.pos[1];
+            sTimeTrialsGhostDataW[frame].posZ      = (s16) m->marioObj->header.gfx.pos[2];
+            sTimeTrialsGhostDataW[frame].pitch     = (s8) (m->marioObj->header.gfx.angle[0] / 0x100);
+            sTimeTrialsGhostDataW[frame].yaw       = (s8) (m->marioObj->header.gfx.angle[1] / 0x100);
+            sTimeTrialsGhostDataW[frame].roll      = (s8) (m->marioObj->header.gfx.angle[2] / 0x100);
+            sTimeTrialsGhostDataW[frame].scaleX    = (u8) MAX(0, MIN(255, m->marioObj->header.gfx.scale[0] * 100.f));
+            sTimeTrialsGhostDataW[frame].scaleY    = (u8) MAX(0, MIN(255, m->marioObj->header.gfx.scale[1] * 100.f));
+            sTimeTrialsGhostDataW[frame].scaleZ    = (u8) MAX(0, MIN(255, m->marioObj->header.gfx.scale[2] * 100.f));
+            sTimeTrialsGhostDataW[frame].animIndex = (u8) time_trials_ghost_retrieve_current_animation_index(m);
+            sTimeTrialsGhostDataW[frame].animFrame = (u8) MAX(0, MIN(255, MIN(m->marioObj->header.gfx._animInfo.animFrame, m->marioObj->header.gfx._animInfo.curAnim->_loopEnd - 1)));
+            sTimeTrialsGhostDataW[frame].levelNum  = (u8) gCurrLevelNum;
+            sTimeTrialsGhostDataW[frame].areaIndex = (u8) gCurrAreaIndex;
+        } else if (frame > 0) {
+            sTimeTrialsGhostDataW[frame]           = sTimeTrialsGhostDataW[frame - 1];
+        }
+    }
+}
+
+static void time_trials_ghost_unload_all() {
+    for (s32 i = 0; i != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++i) {
+        const BehaviorScript *ghostBhv = bhvTimeTrialsGhost[i];
+        const BehaviorScript *numberBhv = bhvTimeTrialsGhostNumber[i];
+        struct Object *ghost = time_trials_ghost_get_object(ghostBhv);
+        struct Object *number = time_trials_ghost_get_object(numberBhv);
+        if (ghost) obj_mark_for_deletion(ghost);
+        if (number) obj_mark_for_deletion(number);
+    }
+}
+
+//
+// SM64 Strings
+//
+
+static const u8 *time_trials_to_sm64_string(const char *str) {
+    static u8 sStringPool[256][256];
+    static u8 sStringPoolIndex = 0;
+    u8 *buffer = sStringPool[sStringPoolIndex++];
+    for (s32 k = 0;; str++) {
+        if (*str == 0) {                buffer[k++] = 0xFF; break; }
+        if (*str >= '0' && *str <= '9') buffer[k++] = (u8) (*str - '0' + 0);
+        if (*str >= 'A' && *str <= 'Z') buffer[k++] = (u8) (*str - 'A' + 10);
+        if (*str >= 'a' && *str <= 'z') buffer[k++] = (u8) (*str - 'a' + 36);
+        if (*str == '\'')               buffer[k++] = (u8) (62);
+        if (*str == '.')                buffer[k++] = (u8) (63);
+        if (*str == ':')                buffer[k++] = (u8) (230);
+        if (*str == ',')                buffer[k++] = (u8) (111);
+        if (*str == '-')                buffer[k++] = (u8) (159);
+        if (*str == '"')                buffer[k++] = (u8) (246);
+        if (*str == '@')                buffer[k++] = (u8) (249); // coin
+        if (*str == '_')                buffer[k++] = (u8) (253); // empty star
+        if (*str == '+')                buffer[k++] = (u8) (250); // star filled
+        if (*str == '*')                buffer[k++] = (u8) (251); // x
+        if (*str == ' ')                buffer[k++] = (u8) (158); // space
+    }
+    return buffer;
+}
+
+static const u8 *time_trials_int_to_sm64_string(s32 value, const char *format) {
+    static u8 buffer[64];
+    memset(buffer, 0, 64);
+    if (!format || strlen(format) > 8) {
+        return buffer;
+    }
+    s32 len = snprintf((char *) buffer, 64, format, value);
+    for (s32 i = 0; i < len; ++i) {
+        if (buffer[i] >= 'A' && buffer[i] <= 'F') {
+            buffer[i] = buffer[i] - 'A';
+        } else if (buffer[i] >= 'a' && buffer[i] <= 'f') {
+            buffer[i] = buffer[i] - 'a';
+        } else {
+            buffer[i] = buffer[i] - '0';
+        }
+    }
+    buffer[len] = 0xFF;
+    return buffer;
+}
+
+//
+// Int to String
+//
+
+static const u8 *time_trials_time_to_string(s32 time) {
+    if (time == TIME_TRIALS_UNDEFINED_TIME) {
+        return time_trials_to_sm64_string("-'--\"--");
+    }
+    char buffer[32];
+    sprintf(buffer, "%01d'%02d\"%02d", (time / 1800) % 10, (time / 30) % 60, ((time * 10) / 3) % 100);
+    return time_trials_to_sm64_string(buffer);
+}
+
+static const u8 *time_trials_course_time_to_string(s32 courseTime) {
+    if (courseTime == TIME_TRIALS_UNDEFINED_TIME) {
+        return time_trials_to_sm64_string("-'--\"--");
+    }
+    char buffer[32];
+    sprintf(buffer, "%02d'%02d\"%02d", (courseTime / 1800) % 100, (courseTime / 30) % 60, ((courseTime * 10) / 3) % 100);
+    return time_trials_to_sm64_string(buffer);
+}
+
+static const u8 *time_trials_total_time_to_string(s32 totalTime) {
+    if (totalTime == TIME_TRIALS_UNDEFINED_TIME) {
+        return time_trials_to_sm64_string("--:--:--.--");
+    }
+    char buffer[32];
+    sprintf(buffer, "%02d:%02d:%02d.%02d", (totalTime / 1080000) % 100, (totalTime / 1800) % 60, (totalTime / 30) % 60, ((totalTime * 10) / 3) % 100);
+    return time_trials_to_sm64_string(buffer);
+}
+
+//
+// Render
+//
+
+extern u8 gDialogCharWidths[256];
+static s32 time_trials_get_string_width(const u8 *str) {
+    s32 length = 0;
+    for (; *str != 0xFF; ++str) {
+        length += gDialogCharWidths[*str];
+    }
+    return length;
+}
+
+enum { SCREEN_LEFT = 0, SCREEN_CENTER = 1, SCREEN_RIGHT = 2 };
+enum { ALIGN_LEFT = 0, ALIGN_CENTER = 1, ALIGN_RIGHT = 2 };
+enum { COLOR_WHITE = 0, COLOR_GRAY, COLOR_YELLOW };
+static void time_trials_render_string(s32 dx, s32 y, const u8 *str, s32 origin, s32 alignment, s32 color) {
+
+    // Compute x position from origin and alignment
+    s32 x = 0;
+    s32 l = time_trials_get_string_width(str);
+    s32 mode = origin * 10 + alignment;
+    switch (mode) {
+        case 00: x = GFX_DIMENSIONS_FROM_LEFT_EDGE (dx);         break; // SCREEN_LEFT, ALIGN_LEFT
+        case 01: x = GFX_DIMENSIONS_FROM_LEFT_EDGE (dx - l / 2); break; // SCREEN_LEFT, ALIGN_CENTER
+        case 02: x = GFX_DIMENSIONS_FROM_LEFT_EDGE (dx - l);     break; // SCREEN_LEFT, ALIGN_RIGHT
+        case 10: x = SCREEN_WIDTH / 2 +            (dx);         break; // SCREEN_CENTER, ALIGN_LEFT
+        case 11: x = SCREEN_WIDTH / 2 +            (dx - l / 2); break; // SCREEN_CENTER, ALIGN_CENTER
+        case 12: x = SCREEN_WIDTH / 2 +            (dx - l);     break; // SCREEN_CENTER, ALIGN_RIGHT
+        case 20: x = GFX_DIMENSIONS_FROM_RIGHT_EDGE(dx);         break; // SCREEN_RIGHT, ALIGN_LEFT
+        case 21: x = GFX_DIMENSIONS_FROM_RIGHT_EDGE(dx + l / 2); break; // SCREEN_RIGHT, ALIGN_CENTER
+        case 22: x = GFX_DIMENSIONS_FROM_RIGHT_EDGE(dx + l);     break; // SCREEN_RIGHT, ALIGN_RIGHT
+    }
+
+    // Render characters
+    static const u8 colors[][3] = {
+        { 0xFF, 0xFF, 0xFF },
+        { 0xA0, 0xA0, 0xA0 },
+        { 0xFF, 0xFF, 0x00 },
+    };
+    gSPDisplayList(gDisplayListHead++, dl_ia_text_begin);
+    gDPSetEnvColor(gDisplayListHead++, colors[color][0], colors[color][1], colors[color][2], _gTextAlpha);
+    create_dl_translation_matrix(MENU_MTX_PUSH, x, y, 0);
+    for (; *str != 0xFF; str++) {
+        if (*str != DIALOG_CHAR_SPACE) {
+            gDPSetTextureImage(gDisplayListHead++, G_IM_FMT_IA, G_IM_SIZ_16b, 1, main_font_lut[*str]);
+            gSPDisplayList(gDisplayListHead++, dl_ia_text_tex_settings);
+        }
+        create_dl_translation_matrix(MENU_MTX_NOPUSH, gDialogCharWidths[*str], 0, 0);
+    }
+    gSPPopMatrix(gDisplayListHead++, G_MTX_MODELVIEW);
+    gDPSetEnvColor(gDisplayListHead++, 0xFF, 0xFF, 0xFF, 0xFF);
+    gSPDisplayList(gDisplayListHead++, dl_ia_text_end);
+}
+
+static void time_trials_render_centered_box(s32 y, s32 w, s32 h) {
+    Mtx *matrix = (Mtx *) alloc_display_list(sizeof(Mtx));
+    if (matrix) {
+        create_dl_translation_matrix(MENU_MTX_PUSH, (SCREEN_WIDTH - w) / 2, y + h, 0);
+        guScale(matrix, (f32) w / 130.f, (f32) h / 80.f, 1.f);
+        gSPMatrix(gDisplayListHead++, VIRTUAL_TO_PHYSICAL(matrix), G_MTX_MODELVIEW | G_MTX_MUL | G_MTX_NOPUSH);
+        gDPSetEnvColor(gDisplayListHead++, 0x00, 0x00, 0x00, 0x69);
+        gSPDisplayList(gDisplayListHead++, dl_draw_text_bg_box);
+        gSPPopMatrix(gDisplayListHead++, G_MTX_MODELVIEW);
+    }
+}
+
+/*
+Position:
+Title
+0 4
+1 5
+2 6
+3 7
+C T
+*/
+
+#define TIME_TRIALS_BOX_H_MARGIN    (22.5f * sqr(gfx_current_dimensions.aspect_ratio))
+#define TIME_TRIALS_BOX_V_MARGIN    (40.f)
+#define TIME_TRIALS_TEXT_H_MARGIN   (9.f * gfx_current_dimensions.aspect_ratio)
+#define TIME_TRIALS_TEXT_V_MARGIN   (12.f)
+
+typedef struct {
+    const char *label;
+    bool starGet;
+    s32 time;
+} RenderParams;
+
+static void time_trials_render_pause_times(RenderParams *params, const u8 *courseName, s32 courseTime, s32 totalTime) {
+
+    // Title
+    time_trials_render_string(0, SCREEN_HEIGHT - TIME_TRIALS_BOX_V_MARGIN - TIME_TRIALS_TEXT_V_MARGIN - 14, courseName, SCREEN_CENTER, ALIGN_CENTER, COLOR_WHITE);
+
+    // Stars
+    for (s32 i = 0; i != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++i) {
+        if (params[i].label == NULL) continue;
+        s32 dx, y = (SCREEN_HEIGHT / 2) + ((TIME_TRIALS_TEXT_V_MARGIN / 2) + 10 + TIME_TRIALS_TEXT_V_MARGIN) - (10 + TIME_TRIALS_TEXT_V_MARGIN) * (i % 4) - 3;
+        s32 color = ((strcmp(params[i].label, "ALL STARS") == 0) ? COLOR_YELLOW : COLOR_WHITE);
+
+        // Label
+        dx = TIME_TRIALS_TEXT_H_MARGIN + (i < 4 ? TIME_TRIALS_BOX_H_MARGIN : 0);
+        time_trials_render_string(dx, y, time_trials_to_sm64_string(params[i].label), (i < 4 ? SCREEN_LEFT : SCREEN_CENTER), ALIGN_LEFT, color);
+
+        // Time
+        bool undefined = (params[i].time == TIME_TRIALS_UNDEFINED_TIME);
+        dx = (TIME_TRIALS_TEXT_H_MARGIN + (i < 4 ? 0 : TIME_TRIALS_BOX_H_MARGIN)) * (i < 4 ? -1 : +1);
+        time_trials_render_string(dx, y, time_trials_time_to_string(params[i].time), (i < 4 ? SCREEN_CENTER : SCREEN_RIGHT), ALIGN_RIGHT, undefined ? COLOR_GRAY : color);
+
+        // Star icon
+        bool collected = (params[i].starGet);
+        dx = (TIME_TRIALS_TEXT_H_MARGIN + (i < 4 ? 0 : TIME_TRIALS_BOX_H_MARGIN) + 48) * (i < 4 ? -1 : +1);
+        time_trials_render_string(dx, y, time_trials_to_sm64_string(params[i].starGet ? "+" : "_"), (i < 4 ? SCREEN_CENTER : SCREEN_RIGHT), ALIGN_RIGHT, collected ? color : COLOR_GRAY);
+    }
+
+    // Course time
+    {
+        bool undefined = (courseTime == TIME_TRIALS_UNDEFINED_TIME);
+        time_trials_render_string(TIME_TRIALS_TEXT_H_MARGIN + TIME_TRIALS_BOX_H_MARGIN, TIME_TRIALS_BOX_V_MARGIN + TIME_TRIALS_TEXT_V_MARGIN - 3, time_trials_to_sm64_string("COURSE"), SCREEN_LEFT, ALIGN_LEFT, COLOR_WHITE);
+        time_trials_render_string(-TIME_TRIALS_TEXT_H_MARGIN, TIME_TRIALS_BOX_V_MARGIN + TIME_TRIALS_TEXT_V_MARGIN - 3, time_trials_course_time_to_string(courseTime), SCREEN_CENTER, ALIGN_RIGHT, undefined ? COLOR_GRAY : COLOR_WHITE);
+    }
+    
+    // Total time
+    {
+        bool undefined = (totalTime == TIME_TRIALS_UNDEFINED_TIME);
+        time_trials_render_string(TIME_TRIALS_TEXT_H_MARGIN, TIME_TRIALS_BOX_V_MARGIN + TIME_TRIALS_TEXT_V_MARGIN - 3, time_trials_to_sm64_string("TOTAL"), SCREEN_CENTER, ALIGN_LEFT, COLOR_WHITE);
+        time_trials_render_string(TIME_TRIALS_TEXT_H_MARGIN + TIME_TRIALS_BOX_H_MARGIN, TIME_TRIALS_BOX_V_MARGIN + TIME_TRIALS_TEXT_V_MARGIN - 3, time_trials_total_time_to_string(totalTime), SCREEN_RIGHT, ALIGN_RIGHT, undefined ? COLOR_GRAY : COLOR_WHITE);
+    }
+}
+
+static void time_trials_render_pause_course_times(s32 fileNum, s32 courseNum) {
+    bool isMainCourse   = COURSE_IS_MAIN_COURSE(courseNum);
+    bool isBowserCourse = COURSE_IS_BOWSER_COURSE(courseNum);
+    u8 availableStars   = AVAILABLE_STARS_PER_COURSE[courseNum];
+    u8 collectedStars   = save_file_get_star_flags(fileNum - 1, courseNum - COURSE_MIN);
+
+    // Params
+    static const s32 PARAM_INDEX_TO_PARAM_POS[] = { 0, 4, 1, 5, 2, 6, 3, 7 };
+    static const char *PARAM_LABELS[] = { "STAR 1", "STAR 2", "STAR 3", "STAR 4", "STAR 5", "STAR 6", "STAR 7", "STAR @", "KEY", "G. STAR", "ALL STARS" };
+    RenderParams params[8] = { 0 };
+    s32 paramIndex = 0;
+
+    // Regular Stars
+    for (s32 si = 0; si != TIME_TRIALS_NUM_STARS_PER_COURSE + (isMainCourse || isBowserCourse ? -1 : 0); ++si) {
+        if ((availableStars >> si) & 1) {
+            s32 i = PARAM_INDEX_TO_PARAM_POS[paramIndex];
+            params[i].label = PARAM_LABELS[paramIndex];
+            params[i].starGet = (collectedStars >> si) & 1;
+            params[i].time = time_trials_get_time(fileNum, courseNum, si + 1);
+            paramIndex++;
+        }
+    }
+
+    // 100 Coins Star or Bowser Key (starNum 7)
+    if (isMainCourse) {
+        s32 i = PARAM_INDEX_TO_PARAM_POS[6];
+        params[i].label = PARAM_LABELS[7];
+        params[i].starGet = (collectedStars >> 6) & 1;
+        params[i].time = time_trials_get_time(fileNum, courseNum, TIME_TRIALS_100_COINS_STAR_NUM);
+    }
+#if HAS_BOWSER_FIGHTS
+    else if (courseNum == COURSE_BITDW) {
+        s32 i = PARAM_INDEX_TO_PARAM_POS[6];
+        params[i].label = PARAM_LABELS[8];
+        params[i].starGet = (save_file_get_flags() & (SAVE_FLAG_HAVE_KEY_1 | SAVE_FLAG_UNLOCKED_BASEMENT_DOOR)) != 0;
+        params[i].time = time_trials_get_time(fileNum, courseNum, TIME_TRIALS_BOWSER_KEY_STAR_NUM);
+    } else if (courseNum == COURSE_BITFS) {
+        s32 i = PARAM_INDEX_TO_PARAM_POS[6];
+        params[i].label = PARAM_LABELS[8];
+        params[i].starGet = (save_file_get_flags() & (SAVE_FLAG_HAVE_KEY_2 | SAVE_FLAG_UNLOCKED_UPSTAIRS_DOOR)) != 0;
+        params[i].time = time_trials_get_time(fileNum, courseNum, TIME_TRIALS_BOWSER_KEY_STAR_NUM);
+    } else if (courseNum == COURSE_BITS) {
+        s32 i = PARAM_INDEX_TO_PARAM_POS[6];
+        params[i].label = PARAM_LABELS[9];
+        params[i].starGet = time_trials_get_time(fileNum, courseNum, TIME_TRIALS_BOWSER_KEY_STAR_NUM) != TIME_TRIALS_UNDEFINED_TIME;
+        params[i].time = time_trials_get_time(fileNum, courseNum, TIME_TRIALS_BOWSER_KEY_STAR_NUM);
+    }
+#endif
+
+    // All-Stars (starNum 8)
+    if (OMM_STARS_NON_STOP) {
+        s32 i = PARAM_INDEX_TO_PARAM_POS[7];
+        params[i].label = PARAM_LABELS[10];
+        params[i].starGet = time_trials_get_time(fileNum, courseNum, 8) != TIME_TRIALS_UNDEFINED_TIME;
+        params[i].time = time_trials_get_time(fileNum, courseNum, 8);
+    }
+
+    // Render params
+    const u8 **courseNameTable = (const u8 **) COURSE_NAME_TABLE;
+    time_trials_render_pause_times(
+        params,
+        courseNameTable[courseNum - COURSE_MIN],
+        time_trials_get_course_time(fileNum, courseNum),
+        time_trials_get_total_time(fileNum)
+    );
+}
+
+Gfx *gTimeTableDisplayListHead;
+extern void create_dl_rotation_matrix(s8 pushOp, f32 a, f32 x, f32 y, f32 z);
+bool time_trials_render_time_table() {
+    if (!sTimeTrialsEnabled) {
+        return 0;
+    }
+
+    // Handle menu scrolling
+    static s8 sTableIndex = 0;
+    handle_menu_scrolling(MENU_SCROLL_VERTICAL, &sTableIndex, -1, NUM_AVAILABLE_COURSES);
+    if (sTableIndex == NUM_AVAILABLE_COURSES) sTableIndex = 0;
+    if (sTableIndex == -1) sTableIndex = NUM_AVAILABLE_COURSES - 1;
+
+    // Render a colorful "TIME TRIALS" above the table
+    gDisplayListHead = gTimeTableDisplayListHead;
+    const u8 *pause = time_trials_to_sm64_string("TIME TRIALS");
+    gSPDisplayList(gDisplayListHead++, dl_rgba16_text_begin);
+    gDPSetEnvColor(gDisplayListHead++, 0xFF, 0xFF, 0xFF, _gTextAlpha);
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 - 64, 8, pause);
+    gSPDisplayList(gDisplayListHead++, dl_rgba16_text_end);
+    
+    // Render the black box behind the text
+    time_trials_render_centered_box(TIME_TRIALS_BOX_V_MARGIN, GFX_DIMENSIONS_FROM_RIGHT_EDGE(TIME_TRIALS_BOX_H_MARGIN) - GFX_DIMENSIONS_FROM_LEFT_EDGE(TIME_TRIALS_BOX_H_MARGIN), SCREEN_HEIGHT - 2 * TIME_TRIALS_BOX_V_MARGIN);
+    create_dl_translation_matrix(MENU_MTX_PUSH, SCREEN_WIDTH / 2 + 8, SCREEN_HEIGHT - TIME_TRIALS_BOX_V_MARGIN + 4, 0);
+    create_dl_rotation_matrix(MENU_MTX_NOPUSH, 90.f, 0, 0, 1.f);
+    gDPSetEnvColor(gDisplayListHead++, 0xFF, 0xFF, 0xFF, _gTextAlpha);
+    gSPDisplayList(gDisplayListHead++, dl_draw_triangle);
+    gSPPopMatrix(gDisplayListHead++, G_MTX_MODELVIEW);
+    create_dl_translation_matrix(MENU_MTX_PUSH, SCREEN_WIDTH / 2 - 8, TIME_TRIALS_BOX_V_MARGIN - 4, 0);
+    create_dl_rotation_matrix(MENU_MTX_NOPUSH, 270.f, 0, 0, 1.f);
+    gSPDisplayList(gDisplayListHead++, dl_draw_triangle);
+    gSPPopMatrix(gDisplayListHead++, G_MTX_MODELVIEW);
+
+    // Render the text
+    gSPDisplayList(gDisplayListHead++, dl_ia_text_begin);
+    gDPSetEnvColor(gDisplayListHead++, 0xFF, 0xFF, 0xFF, _gTextAlpha);
+    time_trials_render_pause_course_times(gCurrSaveFileNum, AVAILABLE_COURSES[sTableIndex]);
+    gSPDisplayList(gDisplayListHead++, dl_ia_text_end);
+    return true;
+}
+
+//
+// HUD
+//
+
+static s32 time_trials_get_x_from_center(const u8 *str) {
+    s32 len = 0;
+    for (; *str != 0xFF; str++) {
+        len += (*str == GLOBAL_CHAR_SPACE ? 8 : 12);
+    }
+    return (SCREEN_WIDTH / 2) - len;
+}
+
+static void time_trials_render_timer(s32 y, const char *text, s32 time, u8 colorFade) {
+    const u8 *str = time_trials_to_sm64_string(text);
+    s32 x = time_trials_get_x_from_center(str);
+    gSPDisplayList(gDisplayListHead++, dl_rgba16_text_begin);
+    gDPSetEnvColor(gDisplayListHead++, colorFade, colorFade, colorFade, 0xFF);
+    print_hud_lut_string(HUD_LUT_GLOBAL,                x -  6, y,     str);
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 +  6, y,     time_trials_int_to_sm64_string( (time / 1800)    % 60,  "%01d"));
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 + 26, y,     time_trials_int_to_sm64_string( (time / 30)      % 60,  "%02d"));
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 + 60, y,     time_trials_int_to_sm64_string(((time * 10) / 3) % 100, "%02d"));
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 + 16, y - 8, (const u8 *) (const u8 []) { 56, 0xFF });
+    print_hud_lut_string(HUD_LUT_GLOBAL, SCREEN_WIDTH / 2 + 51, y - 8, (const u8 *) (const u8 []) { 57, 0xFF });
+    gSPDisplayList(gDisplayListHead++, dl_rgba16_text_end);
+    gDPSetEnvColor(gDisplayListHead++, 0xFF, 0xFF, 0xFF, 0xFF);
+}
+
+void time_trials_render_star_select_time(s32 starIndex) {
+    if (sTimeTrialsEnabled) {
+#if defined(SUPER_MARIO_74_AND_EXTREME_EDITION)
+        gCurrAreaIndex = sWarpDest.areaIdx;
+#endif
+        s16 time = time_trials_get_time(gCurrSaveFileNum, gCurrCourseNum, starIndex + 1);
+        if (time != TIME_TRIALS_UNDEFINED_TIME) {
+            time_trials_render_timer(12, "HI SCORE", time, 0xFF);
+        }
+    }
+}
+
+//
+// Update
+//
+
+static void time_trials_write_if_new_record(s32 starNum) {
+    GET_FI(gCurrSaveFileNum);
+    GET_CI(gCurrCourseNum);
+    GET_SI(starNum);
+    CHECK_FI();
+    CHECK_CI();
+    CHECK_SI();
+    s32 t = *__time_trials_time(fi, ci, si);
+    if (t == TIME_TRIALS_UNDEFINED_TIME || t > sTimeTrialsTimer) {
+        __time_trials_write(fi, ci, si);
+        sTimeTrialsHiScore = true;
+    } else {
+        sTimeTrialsHiScore = false;
+    }
+}
+
+static bool isLevelEntry = false;
+void time_trials_level_entry() {
+    static s32 sPrevLevelNum = -1;
+    if (gCurrLevelNum != LEVEL_BOWSER_1 && gCurrLevelNum != LEVEL_BOWSER_2 && gCurrLevelNum != LEVEL_BOWSER_3 &&
+        sPrevLevelNum != LEVEL_BOWSER_1 && sPrevLevelNum != LEVEL_BOWSER_2 && sPrevLevelNum != LEVEL_BOWSER_3) {
+        isLevelEntry = true;
+    }
+    sPrevLevelNum = gCurrLevelNum;
+}
+
+void time_trials_update(struct MarioState *m, bool isPaused) {
+
+    // Load all times at startup
+    if (sTimeTrialsEnabled) {
+        __time_trials_time(0, 0, 0);
+    }
+    
+    // Hold L and press B to enable/disable Time Trials during the pause
+    if (isPaused) {
+        if ((gPlayer1Controller->buttonDown & L_TRIG) && (gPlayer1Controller->buttonPressed & B_BUTTON)) {
+            sTimeTrialsEnabled = !sTimeTrialsEnabled;
+            if (sTimeTrialsEnabled) {
+                play_sound(SOUND_MENU_STAR_SOUND, gVec3fZero);
+            }
+        }
+    }
+
+    // Reset Time Trials state if not enabled
+    if (!sTimeTrialsEnabled) {
+        sTimeTrialsTimer = TIME_TRIALS_MAX_ALLOWED_TIME;
+        sTimeTrialsState = TT_TIMER_DISABLED;
+        time_trials_ghost_unload_all();
+        return;
+    }
+
+    // Update running ghost, record ghost data, and advance timer if it's running
+    if (sTimeTrialsState == TT_TIMER_RUNNING) {
+        sTimeTrialsHiScore = false;
+            
+        // Update ghosts and advance timer if not paused
+        if (!isPaused) {
+            for (s32 i = 0; i != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++i) {
+                time_trials_ghost_update(m, i + 1, sTimeTrialsTimer);
+            }
+            time_trials_ghost_record(m, sTimeTrialsTimer);
+            sTimeTrialsTimer = MIN(MAX(0, sTimeTrialsTimer + 1), TIME_TRIALS_MAX_ALLOWED_TIME);
+        }
+    }
+
+    // Runs timer if course is TTable
+    if (gCurrCourseNum != COURSE_NONE) {
+    
+        // Start timer and init ghost if a course entry is detected
+        if (gMarioObject && isLevelEntry) {
+            sTimeTrialsState = TT_TIMER_RUNNING;
+            sTimeTrialsHiScore = 0;
+            sTimeTrialsTimer = 0;
+            isLevelEntry = false;
+
+            // Reset ghost data
+            time_trials_ghost_unload_all();
+            memset(sTimeTrialsGhostDataW, 0, sizeof(sTimeTrialsGhostDataW));
+            for (s32 i = 0; i != TIME_TRIALS_NUM_TIMES_PER_COURSE; ++i) {
+                memset(sTimeTrialsGhostDataR[i], 0, sizeof(sTimeTrialsGhostDataR[i]));
+            }
+
+            // Load ghosts
+            // Main course: Act ghost, 100 coins ghost
+            if (COURSE_IS_MAIN_COURSE(gCurrCourseNum)) {
+                time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, gDialogCourseActNum, GHOST_MARIO_DEFAULT);
+                time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, TIME_TRIALS_100_COINS_STAR_NUM, GHOST_MARIO_100_COINS);
+            } else {
+#if IS_SM64
+                // PSS: Star 1 blue ghost, Star 2 green ghost
+                if (gCurrCourseNum == COURSE_PSS) {
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, 1, GHOST_MARIO_DEFAULT);
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, 2, GHOST_MARIO_PSS_2);
+                }
+
+                // Bowser course: Bowser fight blue ghost, Red coins red ghost
+                else if (COURSE_IS_BOWSER_COURSE(gCurrCourseNum)) {
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, 1, GHOST_MARIO_RED_COINS);
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, TIME_TRIALS_BOWSER_KEY_STAR_NUM, GHOST_MARIO_DEFAULT);
+                }
+
+                // Other courses: Star 1 blue ghost
+                else {
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, 1, GHOST_MARIO_DEFAULT);
+                }
+#else
+                // Load all ghosts as blue ghosts
+                for (s32 starNum = 1; starNum <= TIME_TRIALS_NUM_STARS_PER_COURSE; ++starNum) {
+                    time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, starNum, GHOST_MARIO_DEFAULT);
+                }
+#endif
+            }
+            
+            // All-stars ghost
+            if (OMM_STARS_NON_STOP) {
+                time_trials_ghost_load(gCurrSaveFileNum, gCurrCourseNum, TIME_TRIALS_NUM_TIMES_PER_COURSE, GHOST_MARIO_ALL_STARS);
+            }
+        }
+
+        // Stop timer and save time when Mario collects a star, a key or a Grand star
+        if ((sTimeTrialsState == TT_TIMER_RUNNING) && (
+            (m->action == ACT_STAR_DANCE_EXIT) ||
+            (m->action == ACT_STAR_DANCE_NO_EXIT) ||
+            (m->action == ACT_STAR_DANCE_WATER) ||
+            (m->action == ACT_FALL_AFTER_STAR_GRAB) ||
+            (m->action == ACT_JUMBO_STAR_CUTSCENE) ||
+            (m->usedObj && m->usedObj->behavior == bhvBowserKey) ||
+            (m->interactObj && m->interactObj->behavior == bhvBowserKey) ||
+            (m->usedObj && m->usedObj->behavior == bhvGrandStar) ||
+            (m->interactObj && m->interactObj->behavior == bhvGrandStar))) {
+
+            // Force Mario to leave the course if he collects a main course star
+            // Ignore this if OMM Non-Stop mode is enabled
+            if (gCurrCourseNum >= COURSE_MIN && gCurrCourseNum <= COURSE_STAGES_MAX && (!OMM_STARS_NON_STOP || OMM_ALL_STARS)) {
+                drop_queued_background_music();
+                fadeout_level_music(120);
+                m->actionArg = 0;
+            }
+
+            // Save the time
+            if (sTimeTrialsState == TT_TIMER_RUNNING) {
+                s32 starNum = gLastCompletedStarNum;
+
+                // Bowser Key or Grand Star
+                if (gCurrLevelNum == LEVEL_BOWSER_1 ||
+                    gCurrLevelNum == LEVEL_BOWSER_2 ||
+                    gCurrLevelNum == LEVEL_BOWSER_3) {
+                    starNum = TIME_TRIALS_BOWSER_KEY_STAR_NUM;
+                    sTimeTrialsState = TT_TIMER_STOPPED;
+                }
+
+                // Write time and ghost data if new record
+                time_trials_write_if_new_record(starNum);
+                if (OMM_STARS_NON_STOP && OMM_ALL_STARS) {
+                    time_trials_write_if_new_record(TIME_TRIALS_NUM_TIMES_PER_COURSE);
+                }
+
+                // Stop the timer if Mario leaves the course
+                if (m->actionArg == 0) {
+                    sTimeTrialsState = TT_TIMER_STOPPED;
+                }
+            }
+        }
+    } else {
+        sTimeTrialsTimer = TIME_TRIALS_MAX_ALLOWED_TIME;
+        sTimeTrialsState = TT_TIMER_DISABLED;
+    }
+
+    // Render timer
+    if (gHudDisplay.flags != HUD_DISPLAY_NONE && configHUD && sTimeTrialsState != TT_TIMER_DISABLED) {
+        if (sTimeTrialsHiScore && sTimeTrialsState == TT_TIMER_STOPPED) {
+            time_trials_render_timer(SCREEN_HEIGHT - 24, "HI SCORE", sTimeTrialsTimer, (sins(gGlobalTimer * 0x1000) * 0x32 + 0xCD));
+        } else if (sTimeTrialsTimer > 0) {
+            time_trials_render_timer(SCREEN_HEIGHT - 24, "TIME", sTimeTrialsTimer, 0xFF);
+        }
+    }
+}
diff --git a/src/game/time_trials.h b/src/game/time_trials.h
new file mode 100644
index 0000000..5cbe8f2
--- /dev/null
+++ b/src/game/time_trials.h
@@ -0,0 +1,16 @@
+#ifndef TIME_TRIALS_H
+#define TIME_TRIALS_H
+
+#include <stdbool.h>
+#include "types.h"
+
+#define TIME_TRIALS time_trials_enabled()
+
+extern Gfx *gTimeTableDisplayListHead;
+bool time_trials_enabled();
+void time_trials_level_entry();
+void time_trials_update(struct MarioState *m, bool isPaused);
+bool time_trials_render_time_table();
+void time_trials_render_star_select_time(s32 starIndex);
+
+#endif // TIME_TRIALS_H
diff --git a/src/game/time_trials_ghost_geo.inl b/src/game/time_trials_ghost_geo.inl
new file mode 100644
index 0000000..53c4cce
--- /dev/null
+++ b/src/game/time_trials_ghost_geo.inl
@@ -0,0 +1,1930 @@
+//
+// Ghost Mario
+//
+
+static const Lights1 ghost_mario_blue_light  = gdSPDefLights1(0x20, 0x20, 0xA0, 0x20, 0x20, 0xA0, 0x28, 0x28, 0x28);
+static const Lights1 ghost_mario_red_light   = gdSPDefLights1(0x80, 0x20, 0x20, 0x80, 0x20, 0x20, 0x28, 0x28, 0x28);
+static const Lights1 ghost_mario_green_light = gdSPDefLights1(0x20, 0x60, 0x20, 0x20, 0x60, 0x20, 0x28, 0x28, 0x28);
+static const Lights1 ghost_mario_gold_light  = gdSPDefLights1(0xA0, 0x80, 0x00, 0xA0, 0x80, 0x00, 0x28, 0x28, 0x28);
+static const Lights1 ghost_mario_pink_light  = gdSPDefLights1(0xC0, 0x40, 0xA0, 0xC0, 0x40, 0xA0, 0x28, 0x28, 0x28);
+
+//
+// Ghost light display list
+//
+
+static const Gfx ghost_mario_blue_light_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+    gsSPLight(&ghost_mario_blue_light.l, 1),
+    gsSPLight(&ghost_mario_blue_light.a, 2),
+    gsSPEndDisplayList(),
+};
+
+static const Gfx ghost_mario_red_light_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+    gsSPLight(&ghost_mario_red_light.l, 1),
+    gsSPLight(&ghost_mario_red_light.a, 2),
+    gsSPEndDisplayList(),
+};
+
+static const Gfx ghost_mario_green_light_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+    gsSPLight(&ghost_mario_green_light.l, 1),
+    gsSPLight(&ghost_mario_green_light.a, 2),
+    gsSPEndDisplayList(),
+};
+
+static const Gfx ghost_mario_gold_light_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+    gsSPLight(&ghost_mario_gold_light.l, 1),
+    gsSPLight(&ghost_mario_gold_light.a, 2),
+    gsSPEndDisplayList(),
+};
+
+static const Gfx ghost_mario_pink_light_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
+    gsSPLight(&ghost_mario_pink_light.l, 1),
+    gsSPLight(&ghost_mario_pink_light.a, 2),
+    gsSPEndDisplayList(),
+};
+
+//
+// Mario's butt
+//
+
+static const Vtx ghost_mario_butt_dl_vertex_group1[] = {
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group2[] = {
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group3[] = {
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group4[] = {
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group5[] = {
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group6[] = {
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group7[] = {
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group8[] = {
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group9[] = {
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+};
+
+static const Vtx ghost_mario_butt_dl_vertex_group10[] = {
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+};
+
+static const Gfx ghost_mario_butt[] = {
+    gsDPPipeSync(),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group1, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 5, 10, 0x0),
+    gsSP2Triangles(4, 11, 10, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group2, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 10, 11, 0x0),
+    gsSP2Triangles(12, 3, 13, 0x0, 6, 8, 12, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group3, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 1, 7, 0x0, 8, 9, 10, 0x0),
+    gsSP2Triangles(11, 9, 12, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group4, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(4, 6, 5, 0x0, 7, 8, 2, 0x0),
+    gsSP2Triangles(9, 7, 10, 0x0, 11, 12, 7, 0x0),
+    gsSP1Triangle(13, 11, 14, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group5, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 1, 0, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 2, 7, 8, 0x0),
+    gsSP2Triangles(9, 10, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group6, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 10, 7, 0x0),
+    gsSP2Triangles(11, 10, 9, 0x0, 12, 13, 14, 0x0),
+    gsSP1Triangle(0, 13, 12, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group7, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 2, 1, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 7, 2, 3, 0x0),
+    gsSP2Triangles(8, 9, 10, 0x0, 9, 8, 11, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 1, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group8, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 10, 5, 0x0),
+    gsSP2Triangles(4, 11, 12, 0x0, 6, 11, 13, 0x0),
+    gsSP2Triangles(13, 3, 14, 0x0, 15, 2, 1, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group9, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(1, 0, 6, 0x0, 7, 8, 9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 0, 13, 14, 0x0),
+    gsSP1Triangle(15, 0, 14, 0x0),
+    gsSPVertex(ghost_mario_butt_dl_vertex_group10, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 3, 0, 0x0),
+    gsSP2Triangles(3, 4, 0, 0x0, 0, 4, 5, 0x0),
+    gsSP2Triangles(5, 6, 7, 0x0, 5, 7, 0, 0x0),
+    gsSP2Triangles(8, 9, 10, 0x0, 9, 11, 10, 0x0),
+    gsSP2Triangles(9, 1, 11, 0x0, 11, 12, 10, 0x0),
+    gsSP1Triangle(10, 13, 8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Left arm
+//
+
+static const Vtx ghost_mario_left_arm_shared_dl_vertex_group1[] = {
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_arm_shared_dl_vertex_group2[] = {
+    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_arm_shared_dl_vertex_group3[] = {
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_arm_shared_dl_vertex_group4[] = {
+    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_arm_shared_dl[] = {
+    gsSPVertex(ghost_mario_left_arm_shared_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+    gsSPVertex(ghost_mario_left_arm_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 1,  7,  6, 0x0,  2,  1,  6, 0x0),
+    gsSP2Triangles( 6,  5,  8, 0x0,  8,  5,  3, 0x0),
+    gsSP2Triangles( 3,  0,  9, 0x0,  9,  0,  2, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(ghost_mario_left_arm_shared_dl_vertex_group3, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  2,  4,  7, 0x0),
+    gsSP2Triangles( 0,  2,  8, 0x0,  9,  0, 10, 0x0),
+    gsSP2Triangles( 6,  9, 11, 0x0,  4,  6, 12, 0x0),
+    gsSP1Triangle(13,  5,  3, 0x0),
+    gsSPVertex(ghost_mario_left_arm_shared_dl_vertex_group4, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 3,  4,  1, 0x0,  5,  6,  7, 0x0),
+    gsSP1Triangle( 6,  8,  7, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_left_forearm_shared_dl_vertex[] = {
+    {{{    -2,     19,     16}, 0, {     0,      0}, {0xdb, 0x61, 0x48, 0x00}}},
+    {{{    47,     14,     13}, 0, {     0,      0}, {0x44, 0x44, 0x51, 0x00}}},
+    {{{    47,     16,    -19}, 0, {     0,      0}, {0x45, 0x61, 0xd6, 0x00}}},
+    {{{    -3,    -17,     26}, 0, {     0,      0}, {0xd7, 0xdb, 0x71, 0x00}}},
+    {{{    46,    -17,     22}, 0, {     0,      0}, {0x41, 0xc7, 0x5c, 0x00}}},
+    {{{    -3,    -38,     -4}, 0, {     0,      0}, {0xd4, 0x89, 0xfe, 0x00}}},
+    {{{    45,    -34,     -4}, 0, {     0,      0}, {0x3f, 0x95, 0xe8, 0x00}}},
+    {{{    -3,    -14,    -34}, 0, {     0,      0}, {0xd7, 0xde, 0x8e, 0x00}}},
+    {{{    46,    -14,    -30}, 0, {     0,      0}, {0x42, 0xf4, 0x95, 0x00}}},
+    {{{    -2,     21,    -21}, 0, {     0,      0}, {0xdb, 0x63, 0xbb, 0x00}}},
+    {{{   -14,     13,    -15}, 0, {     0,      0}, {0x93, 0x2c, 0xd3, 0x00}}},
+    {{{   -14,     11,     10}, 0, {     0,      0}, {0x93, 0x3b, 0x19, 0x00}}},
+    {{{   -15,    -11,    -24}, 0, {     0,      0}, {0x9a, 0xde, 0xbe, 0x00}}},
+    {{{   -15,    -27,     -4}, 0, {     0,      0}, {0x8b, 0xd2, 0x0a, 0x00}}},
+    {{{   -15,    -13,     17}, 0, {     0,      0}, {0x9b, 0xfb, 0x4c, 0x00}}},
+    {{{    58,     -7,     -3}, 0, {     0,      0}, {0x7e, 0xfc, 0x00, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_forearm_shared_dl[] = {
+    gsSPVertex(ghost_mario_left_forearm_shared_dl_vertex, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+    gsSP2Triangles( 8, 15,  6, 0x0,  6, 15,  4, 0x0),
+    gsSP2Triangles( 4, 15,  1, 0x0,  1, 15,  2, 0x0),
+    gsSP2Triangles( 2, 15,  8, 0x0,  0, 14,  3, 0x0),
+    gsSP2Triangles( 3, 13,  5, 0x0,  5, 12,  7, 0x0),
+    gsSP2Triangles( 7, 10,  9, 0x0,  9, 11,  0, 0x0),
+    gsSP2Triangles( 7,  9,  8, 0x0,  5,  7,  6, 0x0),
+    gsSP2Triangles( 3,  5,  4, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 9,  0,  2, 0x0, 12, 13, 10, 0x0),
+    gsSP2Triangles(13, 11, 10, 0x0, 13, 14, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_left_hand_closed_shared_dl_vertex_group1[] = {
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+    {{{    17,     -1,     27}, 0, {     0,      0}, {0x00, 0xfd, 0x7f, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_hand_closed_shared_dl_vertex_group2[] = {
+    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+    {{{    57,     55,    -37}, 0, {     0,      0}, {0x22, 0x54, 0xa9, 0x00}}},
+    {{{    99,     40,    -16}, 0, {     0,      0}, {0x6c, 0x3c, 0xe5, 0x00}}},
+    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_hand_closed_shared_dl_vertex_group3[] = {
+    {{{    27,    -58,      6}, 0, {     0,      0}, {0xa3, 0xad, 0x12, 0x00}}},
+    {{{   -14,    -14,     -4}, 0, {     0,      0}, {0x8c, 0xcd, 0x02, 0x00}}},
+    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+    {{{   -18,     45,      8}, 0, {     0,      0}, {0x84, 0xf3, 0x13, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x99, 0xd2, 0x38, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    27,    -58,      6}, 0, {     0,      0}, {0x73, 0xd5, 0x1d, 0x00}}},
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{   -18,     45,      8}, 0, {     0,      0}, {0x2d, 0x71, 0x21, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_hand_closed_shared_dl_vertex_group4[] = {
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_hand_closed_shared_dl[] = {
+    gsSPVertex(ghost_mario_left_hand_closed_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  1,  0, 0x0,  2,  1,  7, 0x0),
+    gsSP2Triangles( 7,  1,  6, 0x0,  6,  4,  8, 0x0),
+    gsSP2Triangles( 8,  4,  3, 0x0,  9,  3,  2, 0x0),
+    gsSP2Triangles( 0, 10, 11, 0x0, 12, 10,  0, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(ghost_mario_left_hand_closed_shared_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  1,  3, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9, 10,  3, 0x0,  1,  0,  9, 0x0),
+    gsSP2Triangles( 9,  3,  1, 0x0,  5,  2,  1, 0x0),
+    gsSP2Triangles( 0,  2,  7, 0x0,  7,  2,  8, 0x0),
+    gsSP2Triangles( 8,  2, 11, 0x0, 11,  2,  5, 0x0),
+    gsSP2Triangles( 9,  7,  6, 0x0,  6,  8, 12, 0x0),
+    gsSP2Triangles(12,  8, 13, 0x0, 13,  5,  4, 0x0),
+    gsSPVertex(ghost_mario_left_hand_closed_shared_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  2, 0x0),
+    gsSP2Triangles( 8,  2,  3, 0x0,  3,  9, 10, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 11,  7,  6, 0x0),
+    gsSP2Triangles(10, 12, 13, 0x0,  6, 14, 12, 0x0),
+    gsSPVertex(ghost_mario_left_hand_closed_shared_dl_vertex_group4, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 1,  5,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+    gsSP1Triangle( 7,  1,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Right arm
+//
+
+static const Vtx ghost_mario_right_arm_shared_dl_vertex_group1[] = {
+    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_arm_shared_dl_vertex_group2[] = {
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_arm_shared_dl_vertex_group3[] = {
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_arm_shared_dl_vertex_group4[] = {
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_arm_shared_dl[] = {
+    gsSPVertex(ghost_mario_right_arm_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+    gsSPVertex(ghost_mario_right_arm_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  3,  6,  4, 0x0),
+    gsSP2Triangles( 1,  6,  3, 0x0,  0,  7,  1, 0x0),
+    gsSP2Triangles( 8,  7,  0, 0x0,  5,  4,  8, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0, 12,  9, 13, 0x0),
+    gsSP1Triangle(14, 12, 15, 0x0),
+    gsSPVertex(ghost_mario_right_arm_shared_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  5,  2, 0x0),
+    gsSP2Triangles( 8,  7,  9, 0x0, 10,  8, 11, 0x0),
+    gsSP2Triangles( 6, 10, 12, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(ghost_mario_right_arm_shared_dl_vertex_group4, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+    gsSP1Triangle( 5,  8,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_right_forearm_shared_dl_vertex[] = {
+    {{{    47,    -15,    -19}, 0, {     0,      0}, {0x41, 0xcf, 0x9f, 0x00}}},
+    {{{    -3,    -39,      6}, 0, {     0,      0}, {0xd4, 0x8a, 0xf8, 0x00}}},
+    {{{    -2,    -15,    -23}, 0, {     0,      0}, {0xd7, 0xe5, 0x8c, 0x00}}},
+    {{{    46,    -36,      6}, 0, {     0,      0}, {0x3f, 0x94, 0x0f, 0x00}}},
+    {{{    -2,    -18,     38}, 0, {     0,      0}, {0xd6, 0xd5, 0x6f, 0x00}}},
+    {{{    47,    -17,     34}, 0, {     0,      0}, {0x42, 0xec, 0x6a, 0x00}}},
+    {{{    -1,     18,     28}, 0, {     0,      0}, {0xdb, 0x5d, 0x4d, 0x00}}},
+    {{{    48,     13,     25}, 0, {     0,      0}, {0x45, 0x5d, 0x32, 0x00}}},
+    {{{    -1,     20,     -9}, 0, {     0,      0}, {0xdb, 0x67, 0xc1, 0x00}}},
+    {{{    48,     15,     -7}, 0, {     0,      0}, {0x45, 0x4c, 0xb6, 0x00}}},
+    {{{   -14,    -28,      6}, 0, {     0,      0}, {0x90, 0xc9, 0xef, 0x00}}},
+    {{{   -14,    -12,    -13}, 0, {     0,      0}, {0x91, 0x01, 0xc3, 0x00}}},
+    {{{   -13,     12,     -4}, 0, {     0,      0}, {0x9e, 0x4b, 0xe7, 0x00}}},
+    {{{   -13,     10,     21}, 0, {     0,      0}, {0x8d, 0x22, 0x28, 0x00}}},
+    {{{   -14,    -14,     28}, 0, {     0,      0}, {0x9a, 0xd8, 0x3f, 0x00}}},
+    {{{    59,     -8,      7}, 0, {     0,      0}, {0x7f, 0xfd, 0x00, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_forearm_shared_dl[] = {
+    gsSPVertex(ghost_mario_right_forearm_shared_dl_vertex, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+    gsSP2Triangles( 3, 15,  5, 0x0,  5, 15,  7, 0x0),
+    gsSP2Triangles( 7, 15,  9, 0x0, 14, 10,  1, 0x0),
+    gsSP2Triangles(13, 14,  4, 0x0, 12, 13,  6, 0x0),
+    gsSP2Triangles(11, 12,  8, 0x0, 10, 11,  2, 0x0),
+    gsSP2Triangles( 9,  0,  2, 0x0,  7,  9,  8, 0x0),
+    gsSP2Triangles( 5,  7,  6, 0x0,  3,  5,  4, 0x0),
+    gsSP2Triangles( 0,  3,  1, 0x0, 11, 13, 12, 0x0),
+    gsSP2Triangles(11, 10, 13, 0x0, 10, 14, 13, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_right_hand_closed_dl_vertex_group1[] = {
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+    {{{    24,    -57,     -4}, 0, {     0,      0}, {0x73, 0xd4, 0xe6, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x30, 0x72, 0xe5, 0x00}}},
+    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+    {{{    24,    -57,     -4}, 0, {     0,      0}, {0xa2, 0xaf, 0xe7, 0x00}}},
+    {{{   -16,    -12,      6}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x9b, 0xd5, 0xc2, 0x00}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x85, 0xf5, 0xe7, 0x00}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_hand_closed_dl_vertex_group2[] = {
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{   104,    -26,      1}, 0, {     0,      0}, {0x68, 0xc5, 0xd7, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+    {{{    96,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x51, 0x00}}},
+    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+    {{{    97,     39,     24}, 0, {     0,      0}, {0x6b, 0x3a, 0x21, 0x00}}},
+    {{{    86,     30,    -33}, 0, {     0,      0}, {0x4f, 0x22, 0xa4, 0x00}}},
+    {{{    86,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x61, 0x00}}},
+    {{{    54,     54,     44}, 0, {     0,      0}, {0x20, 0x51, 0x5c, 0x00}}},
+    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_hand_closed_dl_vertex_group3[] = {
+    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+    {{{     1,     24,     35}, 0, {     0,      0}, {0xd2, 0x3c, 0x65, 0x00}}},
+    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+    {{{    15,      0,    -23}, 0, {     0,      0}, {0x04, 0x01, 0x82, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_hand_closed[] = {
+    gsSPVertex(ghost_mario_right_hand_closed_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 0, 4, 0x0),
+    gsSP2Triangles(2, 5, 6, 0x0, 6, 7, 4, 0x0),
+    gsSP2Triangles(4, 7, 8, 0x0, 8, 9, 10, 0x0),
+    gsSP2Triangles(9, 5, 2, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(13, 12, 14, 0x0, 14, 12, 8, 0x0),
+    gsSP2Triangles(8, 12, 9, 0x0, 9, 12, 11, 0x0),
+    gsSP1Triangle(3, 15, 0, 0x0),
+    gsSPVertex(ghost_mario_right_hand_closed_dl_vertex_group2, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(3, 4, 5, 0x0, 6, 7, 8, 0x0),
+    gsSP2Triangles(8, 7, 1, 0x0, 1, 7, 4, 0x0),
+    gsSP2Triangles(4, 7, 9, 0x0, 10, 7, 6, 0x0),
+    gsSP2Triangles(9, 10, 5, 0x0, 10, 11, 5, 0x0),
+    gsSP2Triangles(11, 12, 5, 0x0, 1, 4, 3, 0x0),
+    gsSP2Triangles(11, 10, 6, 0x0, 6, 13, 11, 0x0),
+    gsSP2Triangles(7, 10, 9, 0x0, 4, 9, 5, 0x0),
+    gsSP2Triangles(0, 8, 1, 0x0, 6, 8, 0, 0x0),
+    gsSPVertex(ghost_mario_right_hand_closed_dl_vertex_group3, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 1, 3, 4, 0x0),
+    gsSP2Triangles(4, 3, 5, 0x0, 5, 6, 7, 0x0),
+    gsSP2Triangles(7, 6, 0, 0x0, 8, 6, 5, 0x0),
+    gsSP2Triangles(9, 3, 1, 0x0, 0, 6, 8, 0x0),
+    gsSP2Triangles(10, 11, 1, 0x0, 11, 9, 1, 0x0),
+    gsSP2Triangles(11, 12, 9, 0x0, 1, 0, 10, 0x0),
+    gsSP2Triangles(13, 5, 3, 0x0, 3, 9, 14, 0x0),
+    gsSP1Triangle(14, 13, 3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Left leg
+//
+
+static const Vtx ghost_mario_left_thigh_dl_vertex_group1[] = {
+    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+    {{{   116,     10,      8}, 0, {     0,      0}, {0x7e, 0x09, 0x01, 0x00}}},
+    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_thigh_dl_vertex_group2[] = {
+    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+    {{{    21,    -54,      8}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0x00}}},
+    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_thigh[] = {
+    gsDPPipeSync(),
+    gsSPVertex(ghost_mario_left_thigh_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(3, 1, 4, 0x0, 4, 1, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 8, 7, 9, 0x0),
+    gsSP2Triangles(9, 7, 10, 0x0, 10, 7, 11, 0x0),
+    gsSP2Triangles(11, 7, 6, 0x0, 12, 3, 13, 0x0),
+    gsSP2Triangles(13, 4, 14, 0x0, 14, 4, 15, 0x0),
+    gsSPVertex(ghost_mario_left_thigh_dl_vertex_group2, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(4, 5, 1, 0x0, 0, 2, 6, 0x0),
+    gsSP2Triangles(7, 0, 8, 0x0, 9, 7, 10, 0x0),
+    gsSP2Triangles(3, 9, 10, 0x0, 2, 3, 6, 0x0),
+    gsSP2Triangles(3, 11, 6, 0x0, 10, 11, 3, 0x0),
+    gsSP2Triangles(7, 8, 10, 0x0, 0, 12, 8, 0x0),
+    gsSP2Triangles(6, 12, 0, 0x0, 1, 13, 3, 0x0),
+    gsSP2Triangles(0, 4, 1, 0x0, 14, 4, 0, 0x0),
+    gsSP2Triangles(9, 15, 14, 0x0, 3, 13, 15, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_left_leg_shared_dl_vertex[] = {
+    {{{     4,    -37,      9}, 0, {     0,      0}, {0xc1, 0x93, 0x00, 0x00}}},
+    {{{    64,    -46,      9}, 0, {     0,      0}, {0x4b, 0x9a, 0x01, 0x00}}},
+    {{{    65,    -11,     54}, 0, {     0,      0}, {0x2d, 0xdb, 0x70, 0x00}}},
+    {{{     8,     44,     33}, 0, {     0,      0}, {0xcc, 0x5e, 0x43, 0x00}}},
+    {{{    68,     45,     37}, 0, {     0,      0}, {0x52, 0x4b, 0x3c, 0x00}}},
+    {{{    69,     45,    -18}, 0, {     0,      0}, {0x42, 0x61, 0xd1, 0x00}}},
+    {{{     9,     44,    -16}, 0, {     0,      0}, {0xc4, 0x4d, 0xaf, 0x00}}},
+    {{{    66,    -11,    -36}, 0, {     0,      0}, {0x2e, 0xda, 0x91, 0x00}}},
+    {{{     6,     -6,    -31}, 0, {     0,      0}, {0xb4, 0xe5, 0x9f, 0x00}}},
+    {{{     6,     -6,     49}, 0, {     0,      0}, {0xb3, 0xe7, 0x60, 0x00}}},
+    {{{   -14,      8,      8}, 0, {     0,      0}, {0x82, 0x06, 0xff, 0x00}}},
+    {{{    81,      3,      9}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_leg_shared_dl[] = {
+    gsSPVertex(ghost_mario_left_leg_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
+    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
+    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
+    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
+    gsSP2Triangles( 3, 10,  9, 0x0,  5, 11,  7, 0x0),
+    gsSP2Triangles( 7, 11,  1, 0x0,  1, 11,  2, 0x0),
+    gsSP2Triangles( 2, 11,  4, 0x0,  4, 11,  5, 0x0),
+    gsSP2Triangles( 9, 10,  0, 0x0,  0, 10,  8, 0x0),
+    gsSP2Triangles( 8, 10,  6, 0x0,  6, 10,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_left_foot_shared_dl_vertex_group1[] = {
+    {{{   110,      9,     35}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   110,      8,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -41,     65,     26}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+};
+
+static const Vtx ghost_mario_left_foot_shared_dl_vertex_group2[] = {
+    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+    {{{   110,      8,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+    {{{    80,    -31,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
+    {{{   110,      9,     35}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+    {{{   -41,     65,     26}, 0, {     0,      0}, {0x90, 0x17, 0x35, 0x00}}},
+    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x93, 0x16, 0xc4, 0x00}}},
+    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+    {{{   -54,     15,      8}, 0, {     0,      0}, {0x88, 0xd8, 0xfd, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+    {{{    27,    -35,     11}, 0, {     0,      0}, {0xdb, 0x87, 0xfc, 0x00}}},
+};
+
+static const Gfx ghost_mario_left_foot_shared_dl[] = {
+    gsSPVertex(ghost_mario_left_foot_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
+    gsSP2Triangles( 5,  4,  6, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(14,  8, 10, 0x0, 11, 13, 15, 0x0),
+    gsSPVertex(ghost_mario_left_foot_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 2,  3,  0, 0x0,  4,  5,  6, 0x0),
+    gsSP2Triangles( 6,  3,  4, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
+    gsSP2Triangles(12,  9, 10, 0x0,  9, 12,  7, 0x0),
+    gsSP2Triangles(14,  0,  3, 0x0, 11,  0, 14, 0x0),
+    gsSP2Triangles( 3,  6, 14, 0x0, 14,  6,  7, 0x0),
+    gsSP2Triangles(14,  7, 12, 0x0, 12, 11, 14, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Right leg
+//
+
+static const Vtx ghost_mario_right_thigh_shared_dl_vertex_group1[] = {
+    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+    {{{    22,    -54,     -9}, 0, {     0,      0}, {0xf2, 0x82, 0xfd, 0x00}}},
+    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+    {{{   116,     11,     -9}, 0, {     0,      0}, {0x7e, 0x0b, 0xfe, 0x00}}},
+    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_thigh_shared_dl_vertex_group2[] = {
+    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{     0,    -14,     31}, 0, {     0,      0}, {0xa0, 0xdf, 0x4b, 0x00}}},
+    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_thigh_shared_dl[] = {
+    gsSPVertex(ghost_mario_right_thigh_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 3,  5,  4, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 0,  2,  7, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles( 1,  8,  2, 0x0,  2,  8,  7, 0x0),
+    gsSP2Triangles( 7, 11,  5, 0x0,  5, 11,  4, 0x0),
+    gsSP2Triangles( 4, 12,  1, 0x0, 13, 14,  0, 0x0),
+    gsSP2Triangles( 0, 14, 15, 0x0, 15, 14,  3, 0x0),
+    gsSP2Triangles( 3, 14,  6, 0x0,  6, 14, 13, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 11,  9, 12, 0x0),
+    gsSPVertex(ghost_mario_right_thigh_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 0,  2,  4, 0x0,  5,  0,  6, 0x0),
+    gsSP2Triangles( 7,  8,  5, 0x0,  3,  8,  7, 0x0),
+    gsSP2Triangles( 4,  2,  3, 0x0,  7,  9, 10, 0x0),
+    gsSP2Triangles(11,  9,  7, 0x0, 12, 11, 13, 0x0),
+    gsSP2Triangles( 4, 14, 12, 0x0, 10, 14,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_right_leg_shared_dl_vertex_group1[] = {
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xfc, 0x22, 0x7a, 0x00}}},
+    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0xf7, 0x27, 0x88, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+    {{{   -13,     10,     -9}, 0, {     0,      0}, {0x82, 0x08, 0x02, 0x00}}},
+    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_leg_shared_dl_vertex_group2[] = {
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0x75, 0xee, 0xd5, 0x00}}},
+    {{{    83,      4,    -10}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0x75, 0xd1, 0xfd, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0x77, 0xec, 0x26, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0x7a, 0x18, 0x17, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0x79, 0x19, 0xe6, 0x00}}},
+    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_leg_shared_dl[] = {
+    gsSPVertex(ghost_mario_right_leg_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  8, 0x0),
+    gsSP2Triangles(11, 12,  2, 0x0, 13, 14,  2, 0x0),
+    gsSP2Triangles( 2, 14, 15, 0x0, 15, 14,  8, 0x0),
+    gsSP2Triangles( 8, 14,  5, 0x0,  5, 14, 13, 0x0),
+    gsSPVertex(ghost_mario_right_leg_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9,  7, 10, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(11, 13, 14, 0x0, 15, 13,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+static const Vtx ghost_mario_right_foot_dl_vertex_group1[] = {
+    {{{    27,    -35,    -11}, 0, {     0,      0}, {0xdc, 0x87, 0x06, 0x00}}},
+    {{{   -36,     11,     19}, 0, {     0,      0}, {0xb5, 0xd3, 0x5b, 0x00}}},
+    {{{   -54,     14,    -10}, 0, {     0,      0}, {0x89, 0xd6, 0x03, 0x00}}},
+    {{{   -34,     11,    -46}, 0, {     0,      0}, {0xb4, 0xd0, 0xa8, 0x00}}},
+    {{{    43,    -18,    -55}, 0, {     0,      0}, {0x0a, 0xb2, 0x9d, 0x00}}},
+    {{{    80,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
+    {{{    44,    -11,     32}, 0, {     0,      0}, {0x01, 0xb8, 0x68, 0x00}}},
+    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x90, 0x14, 0xc9, 0x00}}},
+    {{{   -40,     63,      5}, 0, {     0,      0}, {0x92, 0x15, 0x3b, 0x00}}},
+    {{{   -14,     54,     29}, 0, {     0,      0}, {0xd5, 0xfe, 0x77, 0x00}}},
+    {{{   -11,     53,    -56}, 0, {     0,      0}, {0xda, 0xfe, 0x87, 0x00}}},
+    {{{   110,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
+    {{{    78,     22,    -61}, 0, {     0,      0}, {0x17, 0xd9, 0x8a, 0x00}}},
+    {{{   109,     11,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
+    {{{    75,     23,     40}, 0, {     0,      0}, {0x0b, 0xda, 0x78, 0x00}}},
+};
+
+static const Vtx ghost_mario_right_foot_dl_vertex_group2[] = {
+    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -40,     63,      5}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -11,     53,    -56}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -14,     54,     29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    78,     22,    -61}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    75,     23,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   110,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   109,     11,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+};
+
+static const Gfx ghost_mario_right_foot[] = {
+    gsSPVertex(ghost_mario_right_foot_dl_vertex_group1, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 3, 0, 0x0),
+    gsSP2Triangles(3, 4, 0, 0x0, 0, 4, 5, 0x0),
+    gsSP2Triangles(0, 6, 1, 0x0, 5, 6, 0, 0x0),
+    gsSP2Triangles(3, 2, 7, 0x0, 8, 7, 2, 0x0),
+    gsSP2Triangles(1, 9, 8, 0x0, 2, 1, 8, 0x0),
+    gsSP2Triangles(7, 10, 3, 0x0, 11, 5, 4, 0x0),
+    gsSP2Triangles(4, 12, 11, 0x0, 6, 5, 13, 0x0),
+    gsSP2Triangles(11, 13, 5, 0x0, 13, 14, 6, 0x0),
+    gsSP2Triangles(14, 9, 6, 0x0, 10, 4, 3, 0x0),
+    gsSP2Triangles(9, 1, 6, 0x0, 10, 12, 4, 0x0),
+    gsSPVertex(ghost_mario_right_foot_dl_vertex_group2, 8, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 1, 3, 2, 0x0),
+    gsSP2Triangles(3, 4, 2, 0x0, 3, 5, 4, 0x0),
+    gsSP2Triangles(5, 6, 4, 0x0, 5, 7, 6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Body
+//
+
+static const Vtx ghost_mario_gold_button_dl_vertex[] = {
+    {{{     9,     89,     41}, 0, {   180,    962}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{     3,     77,     62}, 0, {   682,    966}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{    47,     75,     35}, 0, {    34,    106}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    28,     85,     30}, 0, {   -60,    572}, {0x2c, 0x76, 0x08, 0xff}}},
+    {{{    17,     66,     76}, 0, {   966,    590}, {0x19, 0x58, 0x57, 0xff}}},
+    {{{    32,     62,     74}, 0, {   902,    252}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    48,     64,     59}, 0, {   548,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+    {{{     9,     89,    -40}, 0, {   776,    920}, {0x10, 0x7b, 0xe7, 0xff}}},
+    {{{    28,     85,    -29}, 0, {   990,    512}, {0x2d, 0x75, 0xf2, 0xff}}},
+    {{{    47,     75,    -34}, 0, {   850,     72}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{     3,     77,    -61}, 0, {   264,    972}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{    48,     64,    -58}, 0, {   312,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+    {{{    32,     62,    -73}, 0, {   -24,    310}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    17,     66,    -75}, 0, {   -58,    642}, {0x17, 0x58, 0xa8, 0xff}}},
+};
+
+static const Vtx ghost_mario_tshirt_shared_dl_vertex_group1[] = {
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+    {{{    46,    -34,    -83}, 0, {     0,      0}, {0x24, 0xc8, 0x95, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+};
+
+static const Vtx ghost_mario_tshirt_shared_dl_vertex_group2[] = {
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+    {{{    47,      3,     89}, 0, {     0,      0}, {0x30, 0x08, 0x75, 0xff}}},
+    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+};
+
+static const Vtx ghost_mario_tshirt_shared_dl_vertex_group3[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group1[] = {
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{    28,     85,     30}, 0, {     0,      0}, {0x2c, 0x76, 0x08, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    28,     85,    -29}, 0, {     0,      0}, {0x2d, 0x75, 0xf2, 0xff}}},
+    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{     9,     89,    -40}, 0, {     0,      0}, {0x10, 0x7b, 0xe7, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{   -15,     87,    -35}, 0, {     0,      0}, {0xea, 0x76, 0xda, 0xff}}},
+    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group2[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    48,     64,    -58}, 0, {     0,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    48,     64,     59}, 0, {     0,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group3[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{   -27,    -25,    -86}, 0, {     0,      0}, {0xcb, 0xd5, 0x96, 0xff}}},
+    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+    {{{   -29,    -58,    -59}, 0, {     0,      0}, {0xc9, 0x9a, 0xcf, 0xff}}},
+    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group4[] = {
+    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{   -29,    -58,     59}, 0, {     0,      0}, {0xc8, 0x99, 0x30, 0xff}}},
+    {{{   -27,    -25,     87}, 0, {     0,      0}, {0xcb, 0xd3, 0x69, 0xff}}},
+    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group5[] = {
+    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group6[] = {
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+};
+
+static const Vtx ghost_mario_pants_overalls_shared_dl_vertex_group7[] = {
+    {{{    17,     66,    -75}, 0, {     0,      0}, {0x17, 0x58, 0xa8, 0xff}}},
+    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    17,     66,     76}, 0, {     0,      0}, {0x19, 0x58, 0x57, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+};
+
+static const Gfx ghost_mario_torso_shared_dl[] = {
+    gsSPVertex(ghost_mario_gold_button_dl_vertex, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 3, 0, 0x0),
+    gsSP2Triangles(1, 4, 2, 0x0, 5, 6, 2, 0x0),
+    gsSP2Triangles(4, 5, 2, 0x0, 7, 8, 9, 0x0),
+    gsSP2Triangles(10, 7, 9, 0x0, 9, 11, 12, 0x0),
+    gsSP2Triangles(12, 13, 9, 0x0, 13, 10, 9, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group1, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 0, 3, 1, 0x0),
+    gsSP2Triangles(4, 1, 5, 0x0, 1, 3, 5, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 5, 7, 6, 0x0),
+    gsSP2Triangles(7, 5, 8, 0x0, 9, 6, 7, 0x0),
+    gsSP2Triangles(7, 8, 10, 0x0, 10, 11, 7, 0x0),
+    gsSP2Triangles(9, 7, 11, 0x0, 12, 6, 13, 0x0),
+    gsSP2Triangles(9, 13, 6, 0x0, 6, 12, 14, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 10, 7, 0x0),
+    gsSP2Triangles(7, 10, 11, 0x0, 11, 8, 7, 0x0),
+    gsSP2Triangles(12, 8, 11, 0x0, 13, 0, 2, 0x0),
+    gsSP2Triangles(2, 1, 14, 0x0, 2, 15, 13, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group3, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(3, 6, 7, 0x0, 3, 8, 6, 0x0),
+    gsSP2Triangles(5, 9, 3, 0x0, 8, 3, 9, 0x0),
+    gsSP2Triangles(6, 8, 10, 0x0, 11, 10, 8, 0x0),
+    gsSP2Triangles(9, 11, 8, 0x0, 6, 12, 7, 0x0),
+    gsSP2Triangles(12, 6, 10, 0x0, 7, 12, 13, 0x0),
+    gsSP2Triangles(14, 5, 15, 0x0, 14, 9, 5, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group4, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(1, 4, 3, 0x0, 5, 4, 6, 0x0),
+    gsSP2Triangles(4, 5, 3, 0x0, 2, 3, 7, 0x0),
+    gsSP2Triangles(7, 3, 5, 0x0, 8, 2, 7, 0x0),
+    gsSP2Triangles(2, 8, 0, 0x0, 9, 10, 11, 0x0),
+    gsSP2Triangles(12, 11, 10, 0x0, 11, 7, 13, 0x0),
+    gsSP1Triangle(14, 15, 11, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group5, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 0, 3, 4, 0x0),
+    gsSP2Triangles(2, 5, 0, 0x0, 6, 0, 7, 0x0),
+    gsSP2Triangles(4, 3, 8, 0x0, 9, 7, 4, 0x0),
+    gsSP2Triangles(7, 10, 11, 0x0, 11, 6, 7, 0x0),
+    gsSP2Triangles(9, 12, 13, 0x0, 10, 9, 13, 0x0),
+    gsSP1Triangle(7, 9, 10, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group6, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 0, 3, 1, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 5, 7, 6, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 9, 8, 7, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 11, 13, 0x0),
+    gsSP2Triangles(14, 12, 13, 0x0, 11, 10, 9, 0x0),
+    gsSPVertex(ghost_mario_pants_overalls_shared_dl_vertex_group7, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 2, 1, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 7, 8, 9, 0x0),
+    gsSP2Triangles(10, 7, 9, 0x0, 9, 8, 5, 0x0),
+    gsSP2Triangles(5, 8, 6, 0x0, 11, 1, 0, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 6, 14, 4, 0x0),
+    gsSP1Triangle(11, 0, 12, 0x0),
+    gsSPVertex(ghost_mario_tshirt_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 0, 2, 3, 0x0),
+    gsSP2Triangles(4, 3, 2, 0x0, 4, 5, 3, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 6, 9, 7, 0x0),
+    gsSP2Triangles(6, 8, 10, 0x0, 11, 8, 12, 0x0),
+    gsSP2Triangles(12, 8, 7, 0x0, 8, 11, 10, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(ghost_mario_tshirt_shared_dl_vertex_group2, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 1, 3, 2, 0x0),
+    gsSP2Triangles(3, 1, 4, 0x0, 4, 1, 5, 0x0),
+    gsSP2Triangles(6, 2, 3, 0x0, 7, 8, 9, 0x0),
+    gsSP2Triangles(7, 9, 10, 0x0, 11, 10, 9, 0x0),
+    gsSP2Triangles(12, 3, 4, 0x0, 13, 3, 12, 0x0),
+    gsSP1Triangle(6, 3, 13, 0x0),
+    gsSPVertex(ghost_mario_tshirt_shared_dl_vertex_group3, 5, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 1, 0, 0x0),
+    gsSP1Triangle(1, 4, 2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Head
+//
+
+static const Vtx ghost_mario_m_logo_dl_vertex[] = {
+    {{{   195,     93,     32}, 0, {   744,    732}, {0x51, 0x54, 0x30, 0xff}}},
+    {{{   153,     33,     95}, 0, {  1250,   1066}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   252,     62,     70}, 0, {  1032,    152}, {0x39, 0x4a, 0x55, 0xff}}},
+    {{{   272,     85,      0}, 0, {   472,    -16}, {0x5f, 0x54, 0x00, 0xff}}},
+    {{{   252,     62,    -69}, 0, {   -78,    158}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   195,     93,    -31}, 0, {   232,    736}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   153,     33,    -94}, 0, {  -258,   1076}, {0x03, 0x46, 0x97, 0xff}}},
+};
+
+static const Vtx ghost_mario_eyes_cap_on_dl_vertex[] = {
+    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
+    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
+    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   175,     91,    -38}, 0, {   106,    130}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{   175,     91,     39}, 0, {   842,    112}, {0xc6, 0x6d, 0x19, 0xff}}},
+    {{{   153,     33,    -94}, 0, {  -404,    342}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   153,     33,     95}, 0, {  1362,    296}, {0x04, 0x46, 0x69, 0xff}}},
+};
+
+static const Vtx ghost_mario_hair_sideburn_cap_on_dl_vertex[] = {
+    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{   153,     33,    -94}, 0, {    90,    -58}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{   120,    -11,    111}, 0, {   922,    122}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{   153,     33,     95}, 0, {    22,    -68}, {0x04, 0x46, 0x69, 0xff}}},
+};
+
+static const Vtx ghost_mario_mustache_cap_on_dl_vertex_group1[] = {
+    {{{    77,    108,     34}, 0, {   342,    368}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    92,     88,     84}, 0, {   898,    -18}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{    97,    103,     25}, 0, {   224,    146}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    48,     94,     76}, 0, {   888,    564}, {0xd7, 0x60, 0x47, 0xff}}},
+    {{{    52,    111,     31}, 0, {   354,    690}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    27,    100,     30}, 0, {   442,    982}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{    41,    109,      0}, 0, {    70,    924}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    44,     44,     97}, 0, {  1296,    438}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{     3,     54,     52}, 0, {   892,   1090}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{    52,    111,    -30}, 0, {   340,    684}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{    27,    100,    -29}, 0, {   394,    998}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{     3,     54,    -51}, 0, {   806,   1162}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    41,    109,      0}, 0, {    50,    900}, {0x95, 0x44, 0x00, 0xff}}},
+};
+
+static const Vtx ghost_mario_mustache_cap_on_dl_vertex_group2[] = {
+    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    92,     88,    -83}, 0, {   922,     -4}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   274,    100}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_cap_dl_vertex_group1[] = {
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   122,   -139,    -48}, 0, {     0,      0}, {0x28, 0x94, 0xcd, 0xff}}},
+    {{{   131,    -56,   -123}, 0, {     0,      0}, {0xde, 0xd4, 0x8f, 0xff}}},
+    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    77,   -138,    -50}, 0, {     0,      0}, {0xbc, 0x9e, 0xd8, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{   122,   -139,     49}, 0, {     0,      0}, {0x2d, 0x8f, 0x22, 0xff}}},
+    {{{    77,   -138,     51}, 0, {     0,      0}, {0xc1, 0xa4, 0x3c, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+    {{{   131,    -56,    124}, 0, {     0,      0}, {0xdf, 0xd3, 0x71, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_cap_dl_vertex_group2[] = {
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_cap_dl_vertex_group3[] = {
+    {{{   195,     93,     32}, 0, {     0,      0}, {0x51, 0x54, 0x30, 0xff}}},
+    {{{   173,    132,     66}, 0, {     0,      0}, {0xda, 0x5a, 0x50, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   175,     91,     39}, 0, {     0,      0}, {0xc6, 0x6d, 0x19, 0xff}}},
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   272,     85,      0}, 0, {     0,      0}, {0x5f, 0x54, 0x00, 0xff}}},
+    {{{   182,    155,      0}, 0, {     0,      0}, {0xed, 0x7d, 0x00, 0xff}}},
+    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group1[] = {
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group2[] = {
+    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group3[] = {
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group4[] = {
+    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group5[] = {
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group6[] = {
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_part_cap_on_dl_vertex_group7[] = {
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_back_hair_cap_on_dl_vertex_group1[] = {
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+};
+
+static const Vtx ghost_mario_face_back_hair_cap_on_dl_vertex_group2[] = {
+    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+};
+
+static const Gfx ghost_mario_cap_on_shared_dl[] = {
+    gsSPVertex(ghost_mario_m_logo_dl_vertex, 7, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(2, 3, 0, 0x0, 3, 5, 0, 0x0),
+    gsSP1Triangle(4, 6, 5, 0x0),
+    gsSPVertex(ghost_mario_eyes_cap_on_dl_vertex, 12, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(3, 0, 4, 0x0, 6, 3, 5, 0x0),
+    gsSP2Triangles(3, 1, 0, 0x0, 4, 0, 7, 0x0),
+    gsSP2Triangles(5, 4, 8, 0x0, 2, 9, 10, 0x0),
+    gsSP2Triangles(10, 7, 2, 0x0, 11, 7, 10, 0x0),
+    gsSP1Triangle(7, 0, 2, 0x0),
+    gsSPVertex(ghost_mario_hair_sideburn_cap_on_dl_vertex, 12, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 1, 3, 4, 0x0),
+    gsSP2Triangles(4, 5, 1, 0x0, 3, 1, 0, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 8, 9, 6, 0x0),
+    gsSP2Triangles(9, 10, 6, 0x0, 11, 6, 10, 0x0),
+    gsSPVertex(ghost_mario_mustache_cap_on_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 1, 0, 3, 0x0),
+    gsSP2Triangles(0, 4, 3, 0x0, 5, 3, 4, 0x0),
+    gsSP2Triangles(5, 4, 6, 0x0, 7, 3, 8, 0x0),
+    gsSP2Triangles(8, 3, 5, 0x0, 3, 7, 1, 0x0),
+    gsSP2Triangles(9, 10, 11, 0x0, 12, 10, 13, 0x0),
+    gsSP2Triangles(11, 10, 12, 0x0, 10, 9, 14, 0x0),
+    gsSP1Triangle(15, 9, 11, 0x0),
+    gsSPVertex(ghost_mario_mustache_cap_on_dl_vertex_group2, 5, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP1Triangle(2, 4, 0, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group1, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(3, 4, 2, 0x0, 1, 5, 3, 0x0),
+    gsSP2Triangles(6, 7, 3, 0x0, 7, 4, 3, 0x0),
+    gsSP2Triangles(6, 3, 5, 0x0, 4, 7, 8, 0x0),
+    gsSP2Triangles(9, 4, 8, 0x0, 10, 6, 5, 0x0),
+    gsSP2Triangles(10, 5, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group2, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(6, 7, 8, 0x0, 5, 6, 8, 0x0),
+    gsSP2Triangles(3, 8, 7, 0x0, 9, 3, 7, 0x0),
+    gsSP2Triangles(3, 9, 4, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(0, 10, 1, 0x0, 10, 0, 11, 0x0),
+    gsSP2Triangles(11, 0, 2, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group3, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 1, 0, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 3, 0, 7, 0x0),
+    gsSP2Triangles(8, 9, 10, 0x0, 11, 9, 8, 0x0),
+    gsSP2Triangles(12, 13, 8, 0x0, 8, 13, 11, 0x0),
+    gsSP1Triangle(9, 11, 14, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group4, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 2, 0x0),
+    gsSP2Triangles(5, 2, 4, 0x0, 2, 6, 3, 0x0),
+    gsSP2Triangles(3, 6, 7, 0x0, 8, 9, 3, 0x0),
+    gsSP2Triangles(9, 4, 3, 0x0, 7, 10, 3, 0x0),
+    gsSP2Triangles(3, 10, 8, 0x0, 11, 4, 9, 0x0),
+    gsSP2Triangles(12, 11, 9, 0x0, 13, 9, 8, 0x0),
+    gsSP2Triangles(9, 13, 12, 0x0, 4, 11, 5, 0x0),
+    gsSP1Triangle(14, 15, 11, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group5, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 0, 4, 0x0),
+    gsSP2Triangles(1, 5, 6, 0x0, 1, 3, 5, 0x0),
+    gsSP2Triangles(2, 1, 6, 0x0, 2, 6, 7, 0x0),
+    gsSP2Triangles(8, 9, 10, 0x0, 6, 5, 11, 0x0),
+    gsSP2Triangles(12, 13, 8, 0x0, 10, 12, 8, 0x0),
+    gsSP1Triangle(14, 8, 13, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group6, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(5, 6, 7, 0x0, 6, 5, 8, 0x0),
+    gsSP2Triangles(5, 7, 3, 0x0, 9, 10, 11, 0x0),
+    gsSP2Triangles(6, 12, 7, 0x0, 13, 10, 9, 0x0),
+    gsSP2Triangles(14, 13, 9, 0x0, 15, 10, 13, 0x0),
+    gsSPVertex(ghost_mario_face_part_cap_on_dl_vertex_group7, 13, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 1, 0x0),
+    gsSP2Triangles(1, 5, 3, 0x0, 2, 1, 4, 0x0),
+    gsSP2Triangles(5, 6, 7, 0x0, 7, 6, 8, 0x0),
+    gsSP2Triangles(7, 9, 3, 0x0, 5, 7, 3, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 6, 10, 0x0),
+    gsSP1Triangle(12, 8, 6, 0x0),
+    gsSPVertex(ghost_mario_face_cap_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 2, 4, 0x0),
+    gsSP2Triangles(4, 2, 5, 0x0, 3, 0, 2, 0x0),
+    gsSP2Triangles(2, 1, 6, 0x0, 6, 7, 2, 0x0),
+    gsSP2Triangles(5, 2, 7, 0x0, 6, 1, 8, 0x0),
+    gsSP2Triangles(8, 1, 0, 0x0, 6, 8, 9, 0x0),
+    gsSP2Triangles(10, 7, 6, 0x0, 9, 10, 6, 0x0),
+    gsSP2Triangles(11, 10, 9, 0x0, 9, 8, 11, 0x0),
+    gsSP2Triangles(11, 8, 12, 0x0, 0, 12, 8, 0x0),
+    gsSP2Triangles(13, 10, 11, 0x0, 11, 12, 14, 0x0),
+    gsSP2Triangles(15, 11, 14, 0x0, 13, 11, 15, 0x0),
+    gsSPVertex(ghost_mario_face_cap_dl_vertex_group2, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 0, 0x0),
+    gsSP2Triangles(4, 5, 0, 0x0, 0, 6, 1, 0x0),
+    gsSP2Triangles(7, 1, 8, 0x0, 8, 1, 6, 0x0),
+    gsSP2Triangles(9, 10, 11, 0x0, 9, 12, 10, 0x0),
+    gsSP2Triangles(12, 9, 13, 0x0, 13, 9, 14, 0x0),
+    gsSPVertex(ghost_mario_face_cap_dl_vertex_group3, 15, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 2, 1, 3, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 5, 7, 6, 0x0),
+    gsSP2Triangles(8, 9, 5, 0x0, 0, 10, 1, 0x0),
+    gsSP2Triangles(1, 10, 3, 0x0, 11, 10, 0, 0x0),
+    gsSP2Triangles(12, 3, 10, 0x0, 12, 10, 13, 0x0),
+    gsSP2Triangles(13, 10, 11, 0x0, 5, 9, 7, 0x0),
+    gsSP1Triangle(7, 9, 14, 0x0),
+    gsSPVertex(ghost_mario_face_back_hair_cap_on_dl_vertex_group1, 16, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 3, 4, 5, 0x0),
+    gsSP2Triangles(5, 6, 7, 0x0, 5, 8, 6, 0x0),
+    gsSP2Triangles(5, 4, 8, 0x0, 7, 3, 5, 0x0),
+    gsSP2Triangles(0, 2, 6, 0x0, 6, 9, 7, 0x0),
+    gsSP2Triangles(0, 6, 8, 0x0, 3, 7, 10, 0x0),
+    gsSP2Triangles(1, 11, 12, 0x0, 12, 13, 14, 0x0),
+    gsSP2Triangles(11, 13, 12, 0x0, 1, 12, 2, 0x0),
+    gsSP2Triangles(14, 2, 12, 0x0, 15, 14, 13, 0x0),
+    gsSPVertex(ghost_mario_face_back_hair_cap_on_dl_vertex_group2, 14, 0),
+    gsSP2Triangles(0, 1, 2, 0x0, 0, 2, 3, 0x0),
+    gsSP2Triangles(4, 5, 6, 0x0, 7, 3, 2, 0x0),
+    gsSP2Triangles(7, 8, 9, 0x0, 9, 10, 7, 0x0),
+    gsSP2Triangles(2, 1, 11, 0x0, 2, 11, 7, 0x0),
+    gsSP2Triangles(9, 12, 13, 0x0, 10, 9, 13, 0x0),
+    gsSP1Triangle(8, 12, 9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+//
+// Ghost Mario geo
+//
+
+static const GeoLayout ghost_mario_geo_body[] = {
+    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+    GEO_OPEN_NODE(),
+        GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ghost_mario_butt),
+        GEO_OPEN_NODE(),
+            GEO_OPEN_NODE(),
+                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, ghost_mario_torso_shared_dl),
+                GEO_OPEN_NODE(),
+                    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_cap_on_shared_dl),
+                    GEO_CLOSE_NODE(),
+                    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+                    GEO_OPEN_NODE(),
+                        GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ghost_mario_left_arm_shared_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ghost_mario_left_forearm_shared_dl),
+                            GEO_OPEN_NODE(),
+                                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+                                GEO_OPEN_NODE(),
+                                    GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_left_hand_closed_shared_dl),
+                                GEO_CLOSE_NODE(),
+                            GEO_CLOSE_NODE(),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+                    GEO_OPEN_NODE(),
+                        GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ghost_mario_right_arm_shared_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ghost_mario_right_forearm_shared_dl),
+                            GEO_OPEN_NODE(),
+                                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+                                GEO_OPEN_NODE(),
+                                    GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_right_hand_closed),
+                                GEO_CLOSE_NODE(),
+                            GEO_CLOSE_NODE(),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+            GEO_OPEN_NODE(),
+                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ghost_mario_left_thigh),
+                GEO_OPEN_NODE(),
+                    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ghost_mario_left_leg_shared_dl),
+                    GEO_OPEN_NODE(),
+                        GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, ghost_mario_left_foot_shared_dl),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+            GEO_OPEN_NODE(),
+                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ghost_mario_right_thigh_shared_dl),
+                GEO_OPEN_NODE(),
+                    GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ghost_mario_right_leg_shared_dl),
+                    GEO_OPEN_NODE(),
+                        GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                        GEO_OPEN_NODE(),
+                            GEO_OPEN_NODE(),
+                                GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_right_foot),
+                            GEO_CLOSE_NODE(),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_RETURN(),
+};
+
+static const GeoLayout ghost_mario_blue_geo[] = {
+    GEO_NODE_START(),
+    GEO_OPEN_NODE(),
+        GEO_SCALE(0x00, 16384),
+        GEO_OPEN_NODE(),
+            GEO_ASM(10, geo_update_layer_transparency),
+            GEO_OPEN_NODE(),
+                GEO_NODE_START(),
+                GEO_OPEN_NODE(),
+                    GEO_RENDER_RANGE(-2048, 32767),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_blue_light_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_BRANCH(1, ghost_mario_geo_body),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_END(),
+};
+
+static const GeoLayout ghost_mario_red_geo[] = {
+    GEO_NODE_START(),
+    GEO_OPEN_NODE(),
+        GEO_SCALE(0x00, 16384),
+        GEO_OPEN_NODE(),
+            GEO_ASM(10, geo_update_layer_transparency),
+            GEO_OPEN_NODE(),
+                GEO_NODE_START(),
+                GEO_OPEN_NODE(),
+                    GEO_RENDER_RANGE(-2048, 32767),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_red_light_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_BRANCH(1, ghost_mario_geo_body),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_END(),
+};
+
+static const GeoLayout ghost_mario_green_geo[] = {
+    GEO_NODE_START(),
+    GEO_OPEN_NODE(),
+        GEO_SCALE(0x00, 16384),
+        GEO_OPEN_NODE(),
+            GEO_ASM(10, geo_update_layer_transparency),
+            GEO_OPEN_NODE(),
+                GEO_NODE_START(),
+                GEO_OPEN_NODE(),
+                    GEO_RENDER_RANGE(-2048, 32767),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_green_light_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_BRANCH(1, ghost_mario_geo_body),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_END(),
+};
+
+static const GeoLayout ghost_mario_gold_geo[] = {
+    GEO_NODE_START(),
+    GEO_OPEN_NODE(),
+        GEO_SCALE(0x00, 16384),
+        GEO_OPEN_NODE(),
+            GEO_ASM(10, geo_update_layer_transparency),
+            GEO_OPEN_NODE(),
+                GEO_NODE_START(),
+                GEO_OPEN_NODE(),
+                    GEO_RENDER_RANGE(-2048, 32767),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_gold_light_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_BRANCH(1, ghost_mario_geo_body),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_END(),
+};
+
+static const GeoLayout ghost_mario_pink_geo[] = {
+    GEO_NODE_START(),
+    GEO_OPEN_NODE(),
+        GEO_SCALE(0x00, 16384),
+        GEO_OPEN_NODE(),
+            GEO_ASM(10, geo_update_layer_transparency),
+            GEO_OPEN_NODE(),
+                GEO_NODE_START(),
+                GEO_OPEN_NODE(),
+                    GEO_RENDER_RANGE(-2048, 32767),
+                    GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ghost_mario_pink_light_dl),
+                        GEO_OPEN_NODE(),
+                            GEO_BRANCH(1, ghost_mario_geo_body),
+                        GEO_CLOSE_NODE(),
+                    GEO_CLOSE_NODE(),
+                GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+        GEO_CLOSE_NODE(),
+    GEO_CLOSE_NODE(),
+    GEO_END(),
+};
diff --git a/src/menu/star_select.c b/src/menu/star_select.c
index b5965ac5..a88c9202 100644
--- a/src/menu/star_select.c
+++ b/src/menu/star_select.c
@@ -370,6 +370,8 @@ Gfx *geo_act_selector_strings(s16 callContext, UNUSED struct GraphNode *node) {
 #endif
     if (callContext == GEO_CONTEXT_RENDER) {
         print_act_selector_strings();
+        extern void time_trials_render_star_select_time(s32);
+        time_trials_render_star_select_time(sSelectedActIndex);
     }
     return NULL;
 }
@@ -368,6 +368,8 @@ Gfx *geo_act_selector_strings(s16 callContext, UNUSED struct GraphNode *node)
         gDPSetIod(gDisplayListHead++, iodStarSelect);
 #endif
         print_act_selector_strings();
+        extern void time_trials_render_star_select_time(s32);
+        time_trials_render_star_select_time(sSelectedActIndex);
 #ifdef TARGET_N3DS
         gDPForceFlush(gDisplayListHead++);
         gDPSet2d(gDisplayListHead++, 0);
